// Hit rate & avoid formula by bpat 
// > this does hit = 2.5*skill + 0.5*luck and avo = spd + 2*luck
// made hitrate do skill*4 + 0.5*luck now 

// I could instead do something like.. 
// Weapon accuracy + ((wep acc * ((skill*2)+1)) / 100) + skill + (luk/2)

#include "PB_Calc_Loop_Effects/Installer.event"
#include "Heal_CalcLoop/Installer.event"

#include "StatusDamageLoop.lyn.event" 
#include "NeverMiss.lyn.event" 

ALIGN 4 
UnitTryHealLowerCap:
#incbin "UnitTryHeal.dmp"




PUSH 

ORG $25A1C
callHack_r3(StatusDamageLoop)
ORG $25A29 // make poison target list 
BYTE $D0 // Beq instead of BNE 

ORG $193B8 
callHack_r3(UnitTryHealLowerCap|1) // hooking a skillsys edited function 
PROTECT $193B8 $193BF 

/*
ORG $3D46C 
jumpToHack(PreventStealIfBossAI|1)
ORG $3D474 
SHORT $46C0 $46C0 // nop nop 
*/

ORG $2ABB8
jumpToHack(HitRateLabel)

ORG $2AC24
callHackNew(CritRateLabel|1) 
//ORG $2ABE8
//jumpToHack(AvoidLabel)


ORG $2AE54
jumpToHack_r0(NegateDefHack)

//ORG $25180  - This didn't work properly for some reason. It seemed to work in my context the first few iterations, but it led to a jump to d002d000 or something eventually 
//jumpToHack_r3(AddUnitToTargetListHack)

ORG $2AAD0 
callHack_r3(StabBonusFunc)

ORG $9B788 
jumpToHack_r6(DisplayDurabilitySupply|1) 
SHORT 0x46C0 // Don't ldrh r6, [r0] 

ORG $34CDC 
jumpToHack_r3(DisplayDurabilityTradeWindowSmall) 


ORG $2ADd0 
jumpToHack_r3(DamageModifierCalcLoopHook)


POP

#include "MinimumDamage.lyn.event"
#include "TypeEffectiveness.lyn.event"

#include "DisplayDurabilitySupply.lyn.event"


#include "StabBonus.lyn.event" 



// 2B718 nosferatu effect ? 

//#include "WeaponsRestorePercentHealthHack.lyn.event"




ALIGN 4
HitRateLabel:
#incbin "hitratehack.dmp"

ALIGN 4 
CritRateLabel: 
#incbin "crithack.dmp" 

ALIGN 4
AvoidLabel:
#incbin "avoidhack.dmp"

ALIGN 4
#include "AddUnitToTargetListHack.lyn.event"


ALIGN 4 
NegateDefHack:
#include "NegateDefHack.lyn.event"
POIN NegateDefAmountTable

#define FF16 "0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF"

ALIGN 4 
NegateDefAmountTable:
BYTE FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16
WORD 0 
//ORG CurrentOffset+256 
#undef FF16 

#define NegateDefEntry(ItemID, PercentDefToIgnore) "PUSH; ORG NegateDefAmountTable + (ItemID); BYTE PercentDefToIgnore; POP" 

// also in PB_Calc_Loop_Effects/Installer.event 
//Constrict Flash Growl Leer Pound SandAttack 
//TailWhip FireSpin StringShot Smog Snarl ThunderWave Acid PoisonPowder

NegateDefEntry(Constrict     , 63)
NegateDefEntry(Screech     , 63)
NegateDefEntry(Flash         , 63)
NegateDefEntry(Growl         , 63)
NegateDefEntry(Leer          ,  63)
NegateDefEntry(SandAttack    , 63)
NegateDefEntry(TailWhip      , 63)
//NegateDefEntry(FireSpin      , 63)
NegateDefEntry(StringShot      , 63)
NegateDefEntry(MetalSound      , 63)
NegateDefEntry(Smog      , 63)
NegateDefEntry(Snarl          , 63) 
NegateDefEntry(ThunderWave          , 63) 
NegateDefEntry(Acid          , 63) 
NegateDefEntry(PoisonPowder          , 63) 
NegateDefEntry(FireSpin          , 63) 
NegateDefEntry(ConfuseRay          , 63) 
NegateDefEntry(Glare          , 63) 



//NegateDefEntry(DragonRage          , 80)
NegateDefEntry(SeismicToss          , 50)
NegateDefEntry(NightShade          , 50)




