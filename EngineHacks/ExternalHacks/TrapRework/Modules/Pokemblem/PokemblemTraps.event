
//0x30 - 0x39 usable //"Interact"

//0x10 - 0x19 obtain item //"Take" or #16 - 31 
//0x20 - 0x29 generictrap disappear // "Interact" or 32 - 47 
//other - display only or 64+ 
#include "c/Installer.event" 

	#define CustomTrapID 50 //just sequentially after what i'm aware of being used by other hacks already

	#define CustomDefaultMapSpriteID 0x69
	#define HiddenMapSpriteID 0x69


	SetTrapMapSprite(CustomTrapID,CustomDefaultMapSpriteID)
	SetTrapMapSpritePalette(CustomTrapID,NPCTrapPaletteWord)	
	SetImpassableTrap(CustomTrapID)
	//SetTrapMapSpriteFunc(CustomTrapID,GenericTrapSpriteFunc)



	SetTrapEventInit(RedPokeballItemID,ObtainItemInitialization)
	SetTrapEventInit(GoldPokeballItemID,ObtainItemInitialization)
	SetTrapEventInit(HiddenPokeballItemID,ObtainItemInitialization)

	//SetTrapEventInit(CoinsTrapID,NewObtainCoinsInit)
	SetTrapEventInit(CoinsTrapID,ObtainCoinsInitialization)
		//SetTrapEventInit(CoinsTrapID,ObtainItemInitialization)
	SetTrapEventInit(Placeholder22ID,ObtainItemInitialization)
	SetTrapEventInit(Placeholder23ID,ObtainItemInitialization)
	SetTrapEventInit(Placeholder24ID,ObtainItemInitialization)
	SetTrapEventInit(Placeholder25ID,ObtainItemInitialization)
	SetTrapEventInit(Placeholder26ID,ObtainItemInitialization)
	SetTrapEventInit(Placeholder27ID,ObtainItemInitialization)
	SetTrapEventInit(Placeholder28ID,ObtainItemInitialization)
	SetTrapEventInit(Placeholder29ID,ObtainItemInitialization)
	SetTrapEventInit(Placeholder30ID,ObtainItemInitialization)
	SetTrapEventInit(Placeholder31ID,ObtainItemInitialization)


	SetTrapEventInit(CutBushTrapID,GenericTrapDisappearInitialization)
	SetTrapEventInit(RockSmashTrapID,GenericTrapDisappearInitialization)
	SetTrapEventInit(StrengthBoulderTrapID,GenericTrapDisappearInitialization)
	SetTrapEventInit(BreakableFloorID,GenericTrapDisappearInitialization)
	SetTrapEventInit(HoleID,GenericTrapDisappearInitialization)
	SetTrapEventInit(BoulderReceptacleID,GenericTrapDisappearInitialization)
	SetTrapEventInit(SpawnGenericID,GenericTrapDisappearInitialization)

	SetTrapEventInit(FoodID,GenericTrapDisappearInitialization)
	SetTrapEventInit(BlueWaitID,GenericTrapDisappearInitialization)
	#define TakeTriggerID 41 
	
	SetTrapEventInit(TakeTriggerID,GenericTrapDisappearCompletionInitialization)
	#define Examine2ID 42 
	SetTrapEventInit(Examine2ID,GenericTrapDisappearInitialization)
	SetTrapEventInit(Placeholder43ID,GenericTrapDisappearInitialization)
	SetTrapEventInit(Placeholder44ID,GenericTrapDisappearInitialization)
	SetTrapEventInit(Placeholder45ID,GenericTrapDisappearInitialization)
	SetTrapEventInit(Placeholder46ID,GenericTrapDisappearInitialization)
	
	#define NoMenuOptionObstacleID 47
	SetTrapEventInit(NoMenuOptionObstacleID,GenericTrapDisappearInitialization)
#define InvisibleObstacle(XX,YY) "BYTE NoMenuOptionObstacleID XX YY 0x0 BlankSMS 0"


	SetTrapEventInit(GenericID,GenericTrapInitialization)
	SetTrapEventInit(NPCTalkID,GenericTrapInitialization)
	SetTrapEventInit(CustomTrapID,GenericTrapInitialization)
	
	SetTrapEventInit(FlowerTrapID,GenericTrapInitialization)
	
	SetTrapEventInit(52,GenericTrapInitialization)
	SetTrapEventInit(53,GenericTrapInitialization)
	SetTrapEventInit(54,GenericTrapInitialization)
	SetTrapEventInit(55,GenericTrapInitialization)
	SetTrapEventInit(56,GenericTrapInitialization)
	SetTrapEventInit(57,GenericTrapInitialization)
	SetTrapEventInit(58,GenericTrapInitialization)
	SetTrapEventInit(59,GenericTrapInitialization)
	SetTrapEventInit(60,GenericTrapInitialization)
	SetTrapEventInit(61,GenericTrapInitialization)
	SetTrapEventInit(62,GenericTrapInitialization)
	SetTrapEventInit(63,GenericTrapInitialization)
	
	
	SetTrapEventInit(64,GenericTrapInitialization)
	SetTrapEventInit(65,GenericTrapInitialization)
	SetTrapEventInit(66,GenericTrapInitialization)
	SetTrapEventInit(67,GenericTrapInitialization)
	SetTrapEventInit(68,GenericTrapInitialization)
//my script for usability / effect



	//macros for usage
#define Generic(XX,YY,EffectID) "BYTE CustomTrapID XX YY 0x0 0x0 EffectID"
#define Generic(XX,YY,ReqFlag, Sprite, EffectID) "BYTE CustomTrapID XX YY ReqFlag Sprite EffectID"
#define GenericEffect(id, event) "PUSH; ORG GenericTrapTableOffset + (4 * id); POIN event; POP"

#define Hole(XX,YY) "BYTE HoleID XX YY 0 0 0" 

#define CompletionObstacleID 51 
//#define GenericCompletion(XX,YY,CompletionFlag, Sprite, EffectID) "BYTE CompletionObstacleID XX YY CompletionFlag Sprite EffectID"
#define GenericCompletion(XX,YY,Sprite, TextID) "BYTE CompletionObstacleID XX YY Sprite; SHORT TextID"
SetTrapEventInit(CompletionObstacleID, GenericTrapDisappearCompletionInitialization)
SetTrapMapSpritePalette(CompletionObstacleID,NPCTrapPaletteWord)
SetImpassableTrap(CompletionObstacleID)


#define GenericDisappear(XX,YY,EffectID) "BYTE CutBushTrapID XX YY 0x0 0x0 EffectID"
#define GenericDisappear(XX,YY,ReqFlag, Sprite, EffectID) "BYTE CutBushTrapID XX YY ReqFlag Sprite EffectID"
#define GenericDisappearCompletion(XX,YY,CompletionFlag, Sprite, EffectID) "BYTE TakeTriggerID XX YY CompletionFlag Sprite EffectID"
#define ExamineDisappearCompletion(XX,YY,CompletionFlag, Sprite, EffectID) "BYTE Examine2ID XX YY CompletionFlag Sprite EffectID"


#define GenericDisappearEffect(id, event) "PUSH; ORG GenericTrapDisappearTableOffset + (4 * id); POIN event; POP"


#define ObtainEffect(id, event) "PUSH; ORG ObtainItemEventTableOffset + (4 * id); POIN event; POP"
//#define ObtainItem(XX,YY,CompletionFlag, ItemID) "BYTE RedPokeballItemID XX YY CompletionFlag ItemID 0x0"
//#define ObtainItem(XX,YY,CompletionFlag, ItemID, EffectID) "BYTE RedPokeballItemID XX YY CompletionFlag ItemID EffectID"

#define ObtainItem(XX,YY,CompletionFlag, ItemID) "BYTE RedPokeballItemID XX YY; SHORT CompletionFlag; BYTE ItemID"
#define ObtainGold(XX,YY, Flag, CoinsAmount) "BYTE CoinsTrapID XX YY Flag; SHORT CoinsAmount"

	//#define FlowerSMS 0x7A 
	//#define FlowerTrapID 65 
	// Display only 
#define Flower(XX,YY) "BYTE FlowerTrapID XX YY 0x0 FlowerSMS 0x0"




#define SignTrapID 80 //0x50 
SetTrapEventInit(SignTrapID,DisplayTextInitialization)
SetTrapMapSprite(SignTrapID,SignSMS)
SetTrapMapSpritePalette(SignTrapID,NPCTrapPaletteWord)
SetImpassableTrap(SignTrapID)


#define Sign2TrapID 81 //0x51 
SetTrapEventInit(Sign2TrapID,DisplayTextInitialization)
SetTrapMapSprite(Sign2TrapID,Sign2SMS)
SetTrapMapSpritePalette(Sign2TrapID,NPCTrapPaletteWord)
SetImpassableTrap(Sign2TrapID)

#define BlankExamineID 82 //0x52
SetTrapEventInit(BlankExamineID,DisplayTextInitialization)
SetTrapMapSprite(BlankExamineID,BlankSMS)
SetTrapMapSpritePalette(BlankExamineID,NPCTrapPaletteWord)
SetImpassableTrap(BlankExamineID)

#define BlankTalkID 83 //0x53
SetTrapEventInit(BlankTalkID,DisplayTextInitialization)
SetTrapMapSprite(BlankTalkID,BlankSMS)
SetTrapMapSpritePalette(BlankTalkID,NPCTrapPaletteWord)
SetImpassableTrap(BlankTalkID)

#define TutSignID 84 // 0x54 
SetTrapEventInit(TutSignID,DisplayTextInitialization0x54) // always initialize even if flag is on 
SetTrapMapSprite(TutSignID,SignSMS)
SetTrapMapSpritePalette(TutSignID,NPCTrapPaletteWord)
SetImpassableTrap(TutSignID)

#define TutSign(XX,YY,CompletionFlag, TextID) "BYTE TutSignID XX YY CompletionFlag; SHORT TextID"

// same but not adjacent: on instead 
#define BlankCGEnterID 90 //0x5A 
SetTrapEventInit(BlankCGEnterID,EnterTextInitialization)
SetTrapMapSprite(BlankCGEnterID,BlankSMS)
SetTrapMapSpritePalette(BlankCGEnterID,NPCTrapPaletteWord)
//SetImpassableTrap(BlankEnterID)

#define BlankEnterID 91 //0x5A 
SetTrapEventInit(BlankEnterID,EnterTextInitialization)
SetTrapMapSprite(BlankEnterID,BlankSMS)
SetTrapMapSpritePalette(BlankEnterID,NPCTrapPaletteWord)

#define BlankTutEnterID 92 //0x5A 
SetTrapEventInit(BlankTutEnterID,EnterTextInitialization)
SetTrapMapSprite(BlankTutEnterID,BlankSMS)
SetTrapMapSpritePalette(BlankTutEnterID,NPCTrapPaletteWord)

#define BlankWallEnterID 93 //0x5A 
SetTrapEventInit(BlankWallEnterID,EnterTextInitialization)
SetTrapMapSprite(BlankWallEnterID,BlankSMS)
SetTrapMapSpritePalette(BlankWallEnterID,NPCTrapPaletteWord)


#define TeleportSignAID 96 //0x60 
SetTrapEventInit(TeleportSignAID,TeleportSignInitialization)
SetTrapMapSprite(TeleportSignAID,Sign2SMS)
SetTrapMapSpritePalette(TeleportSignAID,NPCTrapPaletteWord)
SetImpassableTrap(TeleportSignAID)

#define TeleportSignBID 97 //0x61 
SetTrapEventInit(TeleportSignBID,TeleportSignInitialization)
SetTrapMapSprite(TeleportSignBID,Sign2SMS)
SetTrapMapSpritePalette(TeleportSignBID,NPCTrapPaletteWord)
SetImpassableTrap(TeleportSignBID)


#define ObtainSkillID 106 //0x6A 
SetTrapEventInit(ObtainSkillID,ObtainSkillInitialization)
SetTrapMapSprite(ObtainSkillID,GoldPokeballSMS)
SetTrapMapSpritePalette(ObtainSkillID,NPCTrapPaletteWord)
SetImpassableTrap(ObtainSkillID)

#define ObtainSpellID 107 //0x6B 
SetTrapEventInit(ObtainSpellID,ObtainSpellInitialization)
SetTrapMapSprite(ObtainSpellID,GoldPokeballSMS)
SetTrapMapSpritePalette(ObtainSpellID,NPCTrapPaletteWord)
SetImpassableTrap(ObtainSpellID)


#define BerryTreeTrapID 112 //0x70
SetTrapEventInit(BerryTreeTrapID,BerryTreeInitialization)
SetTrapMapSprite(BerryTreeTrapID,BerryTreeSMS)
//SetTrapMapSprite(BerryTreeTrapID,HealingTileSMS)
SetTrapMapSpritePalette(BerryTreeTrapID,NPCTrapPaletteWord)
SetImpassableTrap(BerryTreeTrapID)




#define StatAccessoryTrapID 19 //0x13
SetTrapEventInit(StatAccessoryTrapID,ObtainStatAccessoryInitialization)
SetTrapMapSprite(StatAccessoryTrapID,RedPokeballSMS)
SetTrapMapSpritePalette(StatAccessoryTrapID,NPCTrapPaletteWord)
SetImpassableTrap(StatAccessoryTrapID)

#define SkillAccessoryTrapID 20 //0x14
SetTrapEventInit(SkillAccessoryTrapID,ObtainSkillAccessoryInitialization)
SetTrapMapSprite(SkillAccessoryTrapID,RedPokeballSMS)
SetTrapMapSpritePalette(SkillAccessoryTrapID,NPCTrapPaletteWord)
SetImpassableTrap(SkillAccessoryTrapID)

#define StatAccessoryTrap(XX,YY, Flag, AccessoryID) "BYTE StatAccessoryTrapID XX YY Flag 0x0 AccessoryID"
#define SkillAccessoryTrap(XX,YY, Flag, SkillID) "BYTE SkillAccessoryTrapID XX YY Flag 0x0 SkillID"

#define BerryTree(XX,YY,BerriesCounter) "BYTE BerryTreeTrapID XX YY BerriesCounter; SHORT 0x0"


#define EnterCGTrap(XX,YY,CompletionFlag, TextID) "BYTE BlankCGEnterID XX YY CompletionFlag; SHORT TextID"
#define EnterCGTrap(XX,YY, TextID) "BYTE BlankCGEnterID XX YY 0x0; SHORT TextID"

#define EnterTrap(XX,YY,CompletionFlag, TextID) "BYTE BlankEnterID XX YY CompletionFlag; SHORT TextID"
#define EnterTrap(XX,YY, TextID) "BYTE BlankEnterID XX YY 0x0; SHORT TextID"

#define EnterTutTrap(XX,YY,CompletionFlag, TextID) "BYTE BlankTutEnterID XX YY CompletionFlag; SHORT TextID"
#define EnterTutTrap(XX,YY, TextID) "BYTE BlankTutEnterID XX YY 0x0; SHORT TextID"

#define EnterWallTrap(XX,YY,CompletionFlag, TextID) "BYTE BlankWallEnterID XX YY CompletionFlag; SHORT TextID"
#define EnterWallTrap(XX,YY, TextID) "BYTE BlankWallEnterID XX YY 0x0; SHORT TextID"



#define SignTrap(XX,YY,CompletionFlag, TextID) "BYTE SignTrapID XX YY CompletionFlag; SHORT TextID"
#define SignTrap(XX,YY, TextID) "BYTE SignTrapID XX YY 0x0; SHORT TextID"

#define Sign2Trap(XX,YY,CompletionFlag, TextID) "BYTE Sign2TrapID XX YY CompletionFlag; SHORT TextID"
#define Sign2Trap(XX,YY, TextID) "BYTE Sign2TrapID XX YY 0x0; SHORT TextID"

#define BlankExamineTrap(XX,YY,CompletionFlag, TextID) "BYTE BlankExamineID XX YY CompletionFlag; SHORT TextID" // won't spawn if flag is set 
#define BlankExamineTrap(XX,YY, TextID) "BYTE BlankExamineID XX YY 0x0; SHORT TextID"


// Display + block your path 
#define OpenPokeball(XX,YY) "BYTE OpenPokeballItemID XX YY 0x0 OpenBallSMS 0x0"
#define Sign(XX,YY, EventIndex) "BYTE ObstacleID XX YY 0x0 SignSMS EventIndex"
#define InvisibleSign(XX,YY, EventIndex) "BYTE ObstacleID XX YY 0x0 BlankSMS EventIndex"
#define Save(XX,YY) "BYTE SaveTrapID XX YY 0x0 BlankSMS 1"
#define SaveCost(XX,YY) "BYTE SaveCostID XX YY 0x0 SavePointSMS 2"
#define SaveWithHeal(XX,YY) "BYTE SaveCostID XX YY 0x0 SavePointSMS 2"
#define SaveWithoutHeal(XX,YY) "BYTE SaveCostID XX YY 0x0 SavePointSMS 3"

//#define Enter(XX,YY) 

// NPCs 
#define Gary(XX,YY) "BYTE ObstacleID XX YY 0x0 GarySMS 0x0"

#define RocketA(XX,YY, EventIndex) "BYTE NPCTalkID XX YY 0x0 RocketASMS EventIndex"
#define RocketB(XX,YY, EventIndex) "BYTE NPCTalkID XX YY 0x0 RocketBSMS EventIndex"
#define RocketC(XX,YY, EventIndex) "BYTE NPCTalkID XX YY 0x0 RocketCSMS EventIndex"
#define BugCatcher(XX,YY, EventIndex) "BYTE NPCTalkID XX YY 0x0 BugCatcherSMS EventIndex"
#define Fighter(XX,YY, EventIndex) "BYTE NPCTalkID XX YY 0x0 FighterSMS EventIndex"
#define Hiker(XX,YY, EventIndex) "BYTE NPCTalkID XX YY 0x0 HikerSMS EventIndex"


// HMs 


#define CutBush(XX,YY) "BYTE CutBushTrapID XX YY CutHmFlag CutBushSMS 0x0"
#define CutBushEffect(XX,YY, EffectID) "BYTE CutBushTrapID XX YY CutHmFlag CutBushSMS EffectID"

#define RockSmash(XX,YY) "BYTE RockSmashTrapID XX YY RockSmashFlag RockSmashSMS 0x0"
#define RockSmashEffect(XX,YY, EffectID) "BYTE RockSmashTrapID XX YY RockSmashFlag RockSmashSMS EffectID"

#define StrengthBoulder(XX,YY) "BYTE StrengthBoulderTrapID XX YY StrengthBoulderFlag StrengthBoulderSMS 0x0"
#define StrengthBoulderEffect(XX,YY, EffectIndex) "BYTE StrengthBoulderTrapID XX YY StrengthBoulderFlag StrengthBoulderSMS EffectIndex"
#define Rock(XX,YY) "BYTE ObstacleID XX YY 0x0 rockSMS 0x8" // "A suspicious looking rock..." 
#define BoulderReceptacle(XX, YY, X2, Y2) "BYTE BoulderReceptacleID XX YY X2 Y2 0" 

// Items 
//#define RedPokeballEvent(XX,YY, Flag, ItemID, EventIndex) "BYTE RedPokeballItemID XX YY Flag ItemID EventIndex"
//#define GoldPokeballEvent(XX,YY, Flag, ItemID, EventIndex) "BYTE RedPokeballItemID XX YY Flag ItemID EventIndex"


RemoveRockEvent: 
EARTHQUAKE_START 1 // 0 - Sway, 1 - Tremor 
ASMC 0x80271A1 // SMS_UpdateFromGameData, 0x80271A1
STAL 20 
ASMC ModularSummon_CenterCameraASMC
STAL 15 
ASMC RemoveTrapAtCoordsASMC
ASMC 0x80271A1 // SMS_UpdateFromGameData, 0x80271A1
ASMC 0x8019A65 // RefreshTerrainBmMap, 0x8019A65
STAL 25 
EARTHQUAKE_END 
NoFade 
ENDA 

#define CoinsTrap(XX,YY, Flag, CoinsAmount) "BYTE CoinsTrapID XX YY Flag; SHORT CoinsAmount"
#define SignATrap(XX,YY,Flag, TextID) "BYTE TeleportSignAID XX YY Flag; SHORT TextID"
#define SignBTrap(XX,YY,Flag, TextID) "BYTE TeleportSignBID XX YY Flag; SHORT TextID"

#define SkillScrollTrap(XX,YY, Flag, SkillID) "BYTE ObtainSkillID XX YY Flag SkillScroll SkillID" 
#define SpellScrollTrap(XX,YY, Flag, SpellID) "BYTE ObtainSpellID XX YY Flag SpellScroll SpellID" // 2nd last byte is ItemID defined in custom definitions in root  
#define RedPokeballTrap(XX,YY, Flag, ItemID) "BYTE RedPokeballItemID XX YY ItemID Flag 0x0"
#define GoldPokeballTrap(XX,YY, Flag, ItemID) "BYTE GoldPokeballItemID XX YY ItemID Flag 0x0"





/*
#define ObtainRareItem(XX,YY,CompletionFlag, ItemID) "BYTE RedPokeballItemID XX YY CompletionFlag ItemID 0x0"
#define ObtainRareItem(XX,YY,CompletionFlag, ItemID, EffectID) "BYTE RedPokeballItemID XX YY CompletionFlag ItemID EffectID"
#define ObtainItem(XX,YY,CompletionFlag, ItemID) "BYTE RedPokeballItemID XX YY CompletionFlag ItemID 0x0"
#define ObtainItem(XX,YY,CompletionFlag, ItemID, EffectID) "BYTE RedPokeballItemID XX YY CompletionFlag ItemID EffectID"
*/


    //MESSAGE ObtainItemEventTableOffset space at currentOffset
ALIGN 4
ObtainItemEventTableOffset:
ORG currentOffset+(256*4)


    //MESSAGE GenericTrapTableOffset space at currentOffset
ALIGN 4
GenericTrapTableOffset:
ORG currentOffset+(256*4)

    //MESSAGE GenericTrapDisappearTableOffset space at currentOffset
ALIGN 4
GenericTrapDisappearTableOffset:
ORG currentOffset+(256*4)



#include "asm/GenericTrap.lyn.event"
POIN GenericTrapTableOffset


#include "asm/GenericTrapDisappear.lyn.event"
POIN GenericTrapDisappearTableOffset



// 		Pokeball items 
/*
#define RedPokeball(XX,YY,EffectID) "BYTE CustomTrapID XX YY EffectID 0x0 0x0"
#define RedPokeball(XX,YY,EffectID, TextID) "BYTE CustomTrapID XX YY EffectID; SHORT TextID"
#define GoldPokeball(XX,YY,EffectID) "BYTE CustomTrapID XX YY EffectID 0x0 0x0"
#define GoldPokeball(XX,YY,EffectID, TextID) "BYTE CustomTrapID XX YY EffectID; SHORT TextID"
#define HiddenPokeball(XX,YY,EffectID) "BYTE CustomTrapID XX YY EffectID 0x0 0x0"
#define HiddenPokeball(XX,YY,EffectID, TextID) "BYTE CustomTrapID XX YY EffectID; SHORT TextID"
*/





	SetTrapMapSprite(RedPokeballItemID,RedPokeballSMS)
	SetTrapMapSprite(GoldPokeballItemID,GoldPokeballSMS)
	SetTrapMapSprite(HiddenPokeballItemID,0)
	SetTrapMapSprite(CoinsTrapID,CoinsSMS)

	SetTrapMapSpritePalette(RedPokeballItemID,NPCTrapPaletteWord)
	SetTrapMapSpritePalette(GoldPokeballItemID,NPCTrapPaletteWord)
	SetTrapMapSpritePalette(HiddenPokeballItemID,NPCTrapPaletteWord)
	SetTrapMapSpritePalette(CoinsTrapID,NPCTrapPaletteWord)


	SetImpassableTrap(RedPokeballItemID)
	SetImpassableTrap(GoldPokeballItemID)
	SetImpassableTrap(CoinsTrapID)



	//SetTrapMapSpriteFunc(RedPokeballItemID,ObtainItemSpriteFunc)

//add to unit menu to make usable 
//ObtainItemEffect:
#include "asm/ObtainItem.lyn.event"
//POIN GenericTrapDisappearTableOffset //making an febuilder patch easier by doing this 
POIN ObtainItemEventTableOffset
WORD RedPokeballItemID
POIN GiveItemEvent

ALIGN 4
#include "asm/GenericTrapDisappearCompletion.lyn.event" 
POIN GenericTrapDisappearTableOffset

#include "asm/ObtainCoins.lyn.event"
#include "asm/BerryTree.lyn.event"
#include "asm/ObtainScroll.lyn.event" 
#include "asm/ObtainAccessory.lyn.event"
#include "asm/TeleportSign.lyn.event"
#include "asm/DisplayText.lyn.event" 
#include "asm/EnterText.lyn.event"
#include "asm/StrengthBoulderEffect.lyn.event"

#include "MovementTraps.event" 


#include "GiveItemEvent.event"
#include "ShowTextEvent.event"
