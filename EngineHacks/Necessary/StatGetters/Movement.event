#ifndef MODULAR_GETTER_MOVEMENT_EVENT
#define MODULAR_GETTER_MOVEMENT_EVENT

#include "_Common.event"
ALIGN 4
pMovModifiers: // Movement
	POIN prAddUnitBaseMov prAddUnitMovBonus 
	#ifdef ACCESSORIES_AND_FORGING
		// This doesn't work out of the box and I cba to debug it 
		// So accessories cannot grant movement bonuses 
		//POIN prAddAccessoryMovement
	#endif 
	POIN EnemyMovementBane // lower enemies movement by 1 because it is more fun tbh 
	POIN prDebuffMov 
	//POIN prItemPassiveMov prRallyMov prSkillCelerity prSkillPoise prArmorMarchCheck
	#ifdef STAIRS_ASM
	//POIN StairsMoveDebuff
	#endif
	POIN prNullifyIfFreeze
	POIN TrappedStatus
	POIN TrainerMovementBane
	#ifdef DEBUFFS_MIN_ZERO
	POIN prMinZero
	POIN MaxMovCap
	#endif
	POIN MaxMovCap
WORD 0

ALIGN 4 
MaxMovementValue_Link: 
WORD 19 // Above this may break the game, though Pokemblem does 19 and has not attributed any bugs to it 

prAddUnitBaseMov: // byte 0x12 in ROM class data is base class movement
	rAdd(rForWordAt(UNIT_ROMCLASS, rSByteAt(0x12))) 

prAddUnitMovBonus:
	rAdd(rSByteAt(UNIT_MOV_BONUS))

prSkillCelerity:
	rIfUnitHasSkill(CelerityID)
		rAddConst(2)
		
prSkillPoise:
	rIfUnitHasSkill(PoiseID)
		rAddConst(1)

prNullifyIfGuardAI:
	//rIfUnitHasNotAllegience(UA_BLUE) // I want to always null movement if ai4 = 0x20 
	
		rIfUnitHasGuardAI
			rConstant(0)

prNullifyIfFreeze:
	rIfUnitHasStatus(0x9)
		rConstant(0)

ALIGN 4
prAddEquipMov:
	rAdd(rForUnitEquipped(rCallExternal(prGetItemMovBonus)))
	#include "_asm/GetItemMovBonus.lyn.event"

ALIGN 4
prItemPassiveMov:
#ifndef DONT_STACK_BOOSTS
	rPassiveStatBoostsStacking(STAT_MOV)
#else // DONT_STACK_BOOSTS
	rPassiveStatBoostsNonStacking(STAT_MOV)
#endif // DONT_STACK_BOOSTS


	#ifdef ACCESSORIES_AND_FORGING
ALIGN 4
prAddAccessoryMovement:
	rAdd(rForUnitEquippedAccessory(rCallExternal(prGetItemMovBonus)))
	#endif 	

#endif // MODULAR_GETTER_MOVEMENT_EVENT
