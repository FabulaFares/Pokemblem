

#include "BattleCalcDefinitions.event"

	/* Pre-battle calculation loop */

PUSH
ORG 0x2a95c
jumpToHack(BtlLoopParent)

// ORG 0x2AFFE //make 0xc = cannot double
// SHORT 0x280C 0xD005
POP



ALIGN 4
BtlLoopParent:
#incbin "FE8_battle_calc_loop.dmp"
POIN BtlLoopList

ALIGN 4
BtlLoopList:
//POIN BC_DefRes BC_Power BC_ASpd BC_Hit BC_Avo BC_Crit CritUpSkill BC_Dodge BC_Support BC_WRank BC_Status //these are the existing battle calculation routines
POIN BC_DefRes BC_Power BC_ASpd BC_Hit BC_Avo BC_Crit CritUpSkill BC_Dodge BC_WRank BC_Status // maybe I don't need BC_Support ? 
POIN InitializePreBattleLoop
POIN Lull //This is effectively a stat modifier routine, so it has to go first
POIN Intimidate_Prebattle GuardBreaker_Prebattle Downgrade_Prebattle
// I've decided to comment out stuff that I'm not using for the time being in order to speed up AI - Vesly 


//POIN FaireCheck //HolyAura
//POIN BreakerCheck MageSlayer
POIN BlowCheck
POIN DefendingCheck
#ifdef LEADERSHIP_STARS
  POIN LeadershipHook
#endif //LEADERSHIP_STARS
#ifdef BIORHYTHM
  POIN BiorhythmFunc
#endif //BIORHYTHM
POIN Wrath //SpurStr SpurMag SpurSpd SpurDef SpurRes
//POIN DriveStr DriveMag DriveSpd DriveDef DriveRes
//POIN LuckySeven OddRhythm EvenRhythm QuickBurn SlowBurn
//POIN Demoiselle Gentilhomme 
//POIN MaleficAura Intimidate 
POIN Tantivy Focus Anathema Loyalty FieryBlood LifeAndDeath WindDisciple Perfectionist Puissance Hawkeye LightWeight Trample Opportunist 
POIN BattleVeteran SilentPride Thunderstorm Outrider HeavyStrikes Charge Vanity KnightAspirant AssassinateDamageBonus ArcaneBlade
//Inspiration DivinelyInspiring Charm Solidarity VoiceOfPeace  LilysPoise Charisma Hex  Infiltrator
//POIN ElbowRoom NaturalCover Gamble 
POIN NightTide Insight Prescience Vigilance DefiantAvo DefiantCrit TowerShield ShortShield
//POIN Daunt BloodTide WhitePool  //IndoorFighter OutdoorFighter Deadeye Fortune ChaosStyle StunningSmile
POIN ChargePlus
//POIN BlueFlame BlueFlameAura DoubleLion //Cultured Thighdeology Thotslayer KeepUp Armorboost Horseguard Skyguard ForeignPrincess 
POIN Frenzy // This was moved here because Str/Mag Split conflict, and... I'm not sure why it wouldn't be here in the first place.
//POIN UpWithArch
//POIN AxefaithHit
POIN StancesASM
//POIN AirRaidSkillCheck
#ifdef ENABLE_GBA_LETHALITY
//POIN LethalitySkill 
#else
//POIN LethalitySkill NonGBALethalitySkill 
#endif

#ifdef MODULAR_PRE_BATTLE_SKILLS
	//POIN ModularPreBattleSkill 
#endif // MODULAR_PRE_BATTLE_SKILLS
//add any new ones before here

POIN KeenFighter SteadyBrawler // % Damage reduction if doubling goes near end 
//tower shield plus needs to go after every other skill that may affect defender's attack
POIN TowerShieldPlus

POIN SuperFangEffect 
POIN WeakChipDmg

// Dragonskin goes after anything effecting atk or def
POIN Dragonskin
// Because of how killing machine works, critical check should always be done last
POIN CriticalCheck
#ifdef CANNOT_CRIT
	POIN NegateCritWeapons //This goes last, so that crit will always be set to 0 if set and never modified from there
#endif // CANNOT_CRIT
POIN 0

#define AuraSkillEntry(skillID) "PUSH; ORG AuraSkillTable + skillID; BYTE 0x1; POP"

ALIGN 4
AuraSkillTable:
FILL 0xFF

AuraSkillEntry(CantoID)
AuraSkillEntry(CantoPlusID)
AuraSkillEntry(CharmID)
AuraSkillEntry(DemoiselleID)
AuraSkillEntry(GentilhommeID)
AuraSkillEntry(InspirationID)
AuraSkillEntry(DivinelyInspiringID)
AuraSkillEntry(LilysPoiseID)
AuraSkillEntry(SpurStrID)
AuraSkillEntry(SpurMagID)
AuraSkillEntry(SpurSpdID)
AuraSkillEntry(SpurDefID)
AuraSkillEntry(SpurResID)
AuraSkillEntry(NiceThighsID)
AuraSkillEntry(DauntID)
AuraSkillEntry(MaleficAuraID)
AuraSkillEntry(IntimidateID)
AuraSkillEntry(SolidarityID)
AuraSkillEntry(VoiceOfPeaceID)
AuraSkillEntry(AnathemaID)
AuraSkillEntry(LilysPoiseID)
AuraSkillEntry(CharismaID)
AuraSkillEntry(HexID)
AuraSkillEntry(BlueFlameID)
AuraSkillEntry(DriveStrID)
AuraSkillEntry(DriveMagID)
AuraSkillEntry(DriveSpdID)
AuraSkillEntry(DriveDefID)
AuraSkillEntry(DriveResID)
AuraSkillEntry(BloodTideID)
AuraSkillEntry(WhitePoolID)
AuraSkillEntry(NightTideID)

// Occurs once both attacker and defender are confirmed. If weapons negate def, will occur after def is negated. 
ALIGN 4 
DamageModifierCalcLoop:

POIN WeaponsThatAlwaysDouble
POIN WeakChipDmg ScaledUp
POIN EnemyWeightBonus
POIN MinimumDamage // so SE moves will deal at least 2 dmg i guess 
POIN TypeEffectiveness // also caps moves to deal max 255 
#ifdef ENABLE_DAMAGE_REDUCTION
	POIN LevelDamageReduction
#endif 
POIN DoublingDamageModifierFunc // this also occurs on weapons that cannot double if you would be able to otherwise 
POIN ScaledBackFunc
POIN MinimumDamage
POIN MaximumDamage // caps moves to 99 dmg 
POIN SuperFangEffect 
POIN FixedDamageWeapons
POIN ImmuneToDamage
POIN 0 





PUSH
ORG 0x2a3f8
//rewrite range map
jumpToHack(rewriteRangeMap)
POP

ALIGN 4
rewriteRangeMap:
#incbin "rewriteRangeMap.dmp"

PROTECT 0x2A95C 0x2A968
