
//WeaponDebuffTable: // old version 
//defWeaponDebuffs(0,0,0,0,0,0,0) // old version 
#define BuffEnemy 0x40 
#define DebuffSelf 0xC0 
#define DebuffEnemy 0x80 

#define WepDebuffEntry(mag, str, skl, spd, def, res, luk, mov) "BYTE (mag|DebuffEnemy) (str|DebuffEnemy) (skl|DebuffEnemy) (spd|DebuffEnemy) (def|DebuffEnemy) (res|DebuffEnemy) (luk|DebuffEnemy) (mov|DebuffEnemy)" 
#define WepBuffEntry(mag, str, skl, spd, def, res, luk, mov) "BYTE mag str skl spd def res luk mov" 
#define DebuffSelfEntry(mag, str, skl, spd, def, res, luk, mov) "BYTE mag|DebuffSelf str|DebuffSelf skl|DebuffSelf spd|DebuffSelf def|DebuffSelf res|DebuffSelf luk|DebuffSelf mov|DebuffSelf" 
#define DebuffUnitEntry(mag, str, skl, spd, def, res, luk, mov) "BYTE mag|DebuffSelf str|DebuffSelf skl|DebuffSelf spd|DebuffSelf def|DebuffSelf res|DebuffSelf luk|DebuffSelf mov|DebuffSelf" 
// optional macros 

// max boost is +63/-63 and is definable based on # of bits (31 and 15 also work) 
// the default is 31, so >31 but <63 will just be treated as 31 
// values above the max will just be capped 
ALIGN 4 
NewWeaponDebuffTable: 
// 	mag, str, skl, spd, def, res, luk, mov
BYTE 0 0 0 0 0 0 0 0 // do nothing for 0th entry 

// Str, Skill, Speed, Def, Res, Luck, Mag
WepDebuffEntry(0,8,0,0,0,0,0,0) //0x1: Str debuff 
WepDebuffEntry(0,0,8,0,0,0,0,0) //0x2: Skl debuff
WepDebuffEntry(0,0,0,8,0,0,0,0) //0x3: Speed debuff 
WepDebuffEntry(0,0,0,0,0,0,8,0) //0x4: Luk debuff 
WepDebuffEntry(0,0,0,0,8,0,0,0) //0x5: Def debuff 
WepDebuffEntry(0,0,0,0,0,8,0,0) //0x6: Res debuff.
WepDebuffEntry(8,0,0,0,0,0,0,0) //0x7: Mag debuff 

WepDebuffEntry(0,15,0,0,0,0,0,0) //0x8: Str debuff 
WepDebuffEntry(0,0,15,0,0,0,0,0) //0x9: Skl debuff
WepDebuffEntry(0,0,0,15,0,0,0,0) //0xA: Speed debuff 
WepDebuffEntry(0,0,0,0,0,0,15,0) //0xB: Luk debuff 
WepDebuffEntry(0,0,0,0,12,0,0,0) //0xC: Def debuff 
WepDebuffEntry(0,0,0,0,0,12,0,0) //0xD: Res debuff.
WepDebuffEntry(15,0,0,0,0,0,0,0) //0xE: Mag debuff 

WepDebuffEntry(0,15,0,0,0,0,0,0) //0xF: Str debuff 
WepDebuffEntry(0,0,15,0,0,0,0,0) //0x10: Skl debuff
WepDebuffEntry(0,0,0,15,0,0,0,0) //0x11: Speed debuff 
WepDebuffEntry(0,0,0,0,0,0,15,0) //0x12: Luk debuff 
WepDebuffEntry(0,0,0,0,15,0,0,0) //0x13: Def debuff 
WepDebuffEntry(0,0,0,0,0,15,0,0) //0x14: Res debuff.
WepDebuffEntry(15,0,0,0,0,0,0,0) //0x15: Mag debuff 

WepDebuffEntry(0,0,0,0,8,8,0,0) //0x16: Leer debuff 
WepDebuffEntry(0,0,0,0,12,12,0,0) //0x17: Screech debuff 
WepDebuffEntry(8,8,0,0,0,0,0,0) //0x18: Growl / Snarl debuff 
WepDebuffEntry(4,4,4,4,4,4,4,0) // 0x19: Sand attack / pound 
WepDebuffEntry(4,4,4,4,4,4,4,0) // 0x1A: Flash 

BYTE 31 31|DebuffSelf 23|DebuffEnemy 24|BuffEnemy 25 26 27 28 // +31 Mag, -31 Str, -23 Skl for enemy, +24 Spd for enemy, +25/+26/+27/+28 Def/Res/Luk/Mov for user 
WORD 0xFFFFFFFF 0xFFFFFFFF // For FEBuilder to show no further data with 


//WeaponDebuffTable: // This is the old weapon debuff table 
//// Pow, Skl, Spd, Luk, Def, Res, Mag 
//defWeaponDebuffs(0,0,0,0,0,0,0) //0x0: let 0-index entry be no debuffs.
//defWeaponDebuffs(0,1,1,0,2,2,0) //0x1: Bronze Shuriken debuff.
//defWeaponDebuffs(2,0,0,0,3,3,0) //0x2: Iron Shuriken debuff.
//defWeaponDebuffs(3,0,0,0,4,4,0) //0x3: Steel Shuriken debuff.
//defWeaponDebuffs(0,0,4,0,4,4,0) //0x4: Silver Shuriken debuff.
//defWeaponDebuffs(4,0,4,0,4,4,0) //0x5: Pebble debuff.

#define WeakStrDebuff 1
#define WeakSkillDebuff 2 
#define WeakSpeedDebuff 3 
#define WeakLuckDebuff 4
#define WeakDefDebuff 5
#define WeakResDebuff 6 
#define WeakMagDebuff 7 

#define MedStrDebuff 8 
#define MedSkillDebuff 9 
#define MedSpeedDebuff 0xA 
#define MedLuckDebuff 0xB
#define MedDefDebuff 0xC
#define MedResDebuff 0xD
#define MedMagDebuff 0xE

#define GoodStrDebuff 0xF
#define GoodSkillDebuff 0x10
#define GoodSpeedDebuff 0x11
#define GoodLuckDebuff 0x12
#define GoodDefDebuff 0x13
#define GoodResDebuff 0x14
#define GoodMagDebuff 0x15

#define WeakDefResDebuff 0x16
#define MedDefResDebuff 0x17
#define WeakStrMagDebuff 0x18 
#define WeakAllStatsDebuff 0x19 
#define MedAllStatsDebuff 0x1A 

#define CannotDouble 0xC







#include "Manual/_Master Manual Table Installer.event"
#include "StatBoosters.event"