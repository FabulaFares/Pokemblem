#define ChapterID ViridianCh

EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
TurnEventPlayer(0,DebugTurnEvent, 2, 255)

END_MAIN

ALIGN 4 
DebugTurnEvent:
TutText(DebugText)
NoFade 
ENDA 

CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
CHAR PurchasedPsyduckFlag PurchasePsyduckevent [0x0, 0xE1] 0 // NPC
TrainerPostBattleTalk(0xE1) // NPC talk again 
END_MAIN

PurchasePsyduckevent:
EVBIT_MODIFY 4 
WallText(PurchasePsyduckText)
LOAD1 1 PsyduckUnitGroup  
ENUN 
AutoLevelUnits(3, True,  TempAlly<<8|TempAlly) // Psyduck 
SelectCharacter(TempAlly, 0, 0, 0, 0, 1000, 0, 0, 0, 0) 
SVAL sB 0x100 
BEQ 10 sC sB 
GOTO 20

LABEL 10 
UNCR(0x7fff, 1) // SelectCharacter ends MMS 
WallText(No_PurchasedPsyduckText)
ENUF PurchasedPsyduckFlag
DISA TempAlly
GOTO 63

LABEL 20
CHECK_COORDS 0x7fff
SADD sB sC s0  
WARP_OUT
SET_ACTIVE 0
WallText(Yes_PurchasedPsyduckText)

UNCM(TempAlly, 0x10009) // Undeploy + escape the psyduck 
SVAL s1 TempAlly // Psyduck's UnitID 
ASMC ChangeS1UnitIntoLowestUnitID
LABEL 63 
NoFade
ENDA 

ALIGN 4
LocationBasedEvents:
House(0,ViridianUpperHouseEvent, 21,11)
House(EarthbadgeObtained,EnterGym,30,10) 
Vendor(ShopItems,30,19)
/*

Armory(ArmoryItems,10,26)
Village(0x8,VillageEvent,18,27)
House(0,HouseEvent,6,24)
Seize(10,2)
*/
END_MAIN

ViridianUpperHouseEvent: 
CHECK_EVENTID VolcanobadgeObtained 
BNE 0 sC s0
TutText(ViridianUpperHouseText)
GOTO 99 
LABEL 0 
TutText(ViridianUpperHouseText_Lategame)
LABEL 99 
NoFade
ENDA 



MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
AFEV 0 CityAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToRoute2S [15,0] [19,0] 
AREA 0 ToRoute1 [18,37] [21,37] 
AREA 0 ToRoute22 [0,16] [0,18] 
//AFEV DisableTutFlag_A TutMsg1 0
//AFEV DisableTutFlag_B TutMsg2 0
//AFEV 0x19 TutMsg3 0
END_MAIN

#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(16,0) 
EscapeTileEntry(18,0) 
EscapeTileEntry(0,17) 
EscapeTileEntry(19,37) 
EscapeTileEntry(20,37) 
EscapeTileTerminator ; } 
#endif 
ToRoute1:
ChapterTransition(Route1Ch, 12, 0)

ToRoute2S:
ChapterTransition(Route2SCh, 10, 36)


ToRoute22:
ChapterTransition(Route22Ch, 47, 8)

EnterGym:
ENUF EarthbadgeObtained 
ForcedChapterTransition(ViridianGymCh, 15,19)



TutMsg1: 
CHECK_EVENTID DisableTutMsgsFlag
BNE 99 sC s0 
ENUF DisableTutFlag_A
SVAL s1 ((ChapterID*2)+(HelpMsgFlagOffset<<3)) 
ASMC CheckNewFlag_ASMC 
BNE 99 sC s0 
CountPlayersInRange_ASMC(8,5,24,19) 
BEQ 99 sC s0 
ENUT DisableTutFlag_A
EVBIT_MODIFY 4
CAM1 [19,13]
CUMO [19,13]
STAL 30
CURE  
TutText(TrainerTip_Catch)
SVAL s1 ((ChapterID*2)+(HelpMsgFlagOffset<<3)) 
ASMC SetNewFlag_ASMC 
LABEL 99 
NoFade 
ENDA 

TutMsg2: 
CHECK_EVENTID DisableTutMsgsFlag
BNE 99 sC s0
ENUF DisableTutFlag_B 
SVAL s1 ((ChapterID*2+1)+(HelpMsgFlagOffset<<3)) 
ASMC CheckNewFlag_ASMC 
BNE 99 sC s0 
CountPlayersInRange_ASMC(7,19,26,34) 
BEQ 99 sC s0 
ENUT DisableTutFlag_B
EVBIT_MODIFY 4
CAM1 [15,25]
CUMO [15,25]
STAL 30
CURE  
TutText(TrainerTip_Water) 
SVAL s1 ((ChapterID*2+1)+(HelpMsgFlagOffset<<3)) 
ASMC SetNewFlag_ASMC 
LABEL 99 
NoFade 
ENDA 

TutMsg3: 
CHECK_EVENTID DisableTutMsgsFlag
BNE 99 sC s0
ENUF 0x19
SVAL s1 ((ChapterID*2+3)+(HelpMsgFlagOffset<<3)) 
ASMC CheckNewFlag_ASMC 
BNE 99 sC s0 
CountPlayersInRange_ASMC(8,0,19,11) 
BEQ 99 sC s0 
ENUT 0x19
EVBIT_MODIFY 4
CAM1 [15,4]
CUMO [15,4]
STAL 30
CURE  
TutText(TrainerTip_CursorJump) 
SVAL s1 ((ChapterID*2+3)+(HelpMsgFlagOffset<<3)) 
ASMC SetNewFlag_ASMC 
LABEL 99 
NoFade 
ENDA 

// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:

//SignTrap(15,17, ViridianCityText)
TutSign(19,13, ChapterID*2,TrainerTip_Catch)
TutSign(15,25, ChapterID*2,TrainerTip_Water)
TutSign(15,4, ChapterID*2+3,TrainerTip_CursorJump)
//SignTrap(15,25, TrainerTip_Skills)


BlankExamineTrap(26,10, ViridianGymText)
//BlankExamineTrap(30,10, DoorLockedText) // Gym 
//EnterWallTrap(21,11, ViridianUpperHouseText) 
EnterWallTrap(21,18, ViridianGrumpyManText) 
Save(23,24) // 1N of Pokecenter - you can save while adjacent 
//SaveCost(24,26)
CutBush(13,5)


//CoinsTrap(9,29,ChapterID*2,450)
CoinsTrap(26,14,(ChapterID*2)+1,600)

RockSmash(9,22)
RockSmash(10,23)
SkillScrollTrap(12,5, (ChapterID*2)+1, ReliefID)
SpellScrollTrap(9,29, (ChapterID*2), IcyWind)

StrengthBoulder(5,16)
StrengthBoulder(6,17)
StrengthBoulder(5,18)



SignBTrap(19,1, ChapterID, 0x0) //no extra text 
SignATrap(16,31, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 

//SkillScrollTrap(15,11, ChapterID*2, AcrobatID)

//GenericCompletion(21,18,EarthbadgeObtained, BlankSMS, 0) // 0 sprite ID 
BlankExamineTrap(30,10, VolcanobadgeObtained, DoorLockedText) // cannot walk through 


Flower(35,13)
Flower(34,14)
Flower(33,13)
Flower(32,14)
Flower(22,31)
Flower(24,31)
Flower(26,31)
Flower(30,31)
Flower(32,31)
Flower(34,31)

Flower(28,23)
Flower(30,23)
Flower(29,24)
Flower(31,24)
Flower(28,25)
Flower(30,25)
Flower(29,26)
Flower(31,26)

ENDTRAP
ALIGN 4


BeginningScene:
CALL GlobalBeginningScene
CALL CityBeginningScene
CALL LoadAndPlacePlayers 
LOAD1 1 FisherUnitGroup
ENUN 
MarkTrainerAsDefeated(0xE1) 

CHECK_EVENTID VolcanobadgeObtained // trap exists after you have marshbadge until you get volcanobadge 
BNE 0 sC s0  // old man is visiting Cinnabar 
CHECK_EVENTID MarshbadgeObtained
BEQ 1 sC s0 
LABEL 0 
RemoveTrap(21,18)
ENUN
LABEL 1


LABEL 0x63
SVAL s1 1 // unit id 
SVAL s3 1 // facing right 
ASMC SetUnitFacingASMC
NoFade
ENDA



ALIGN 4
ShopItems:
//SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
//SHLI 0
//BYTE SuperPotion 12
BYTE JellyDonut 3
//BYTE $00; ALIGN 4
BYTE SkillScroll FocusID 


BYTE SpellScroll Tackle SpellScroll Scratch SpellScroll Leer SpellScroll Bite 
BYTE SpellScroll Ember SpellScroll Bubble  SpellScroll LeafFlurry SpellScroll Confusion 
//SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
//SHLI SuperPotion
BYTE $00; ALIGN 4



EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 


FisherUnitGroup:
UNIT 0xE1 fisherID 0x0 Level(LVFACERIGHT, Enemy, 1) [13,24]  0b 0x0	0x1 REDA13R24 [ThreeRangeWep,0x0,0x0,0x0] DoNothing
UNIT 0x60 KrabbyID 0x0 Level(0, Enemy, 1) [14,24]  0b 0x0	0x1 REDA14R24 [Tackle,0x0,0x0,0x0] DoNothing
UNIT

PsyduckUnitGroup:
UNIT TempAlly PsyduckID 0x0 Level(0, Ally, 1) [0,0]  0b 0x0	0x1 REDA0R0 [0x0,0x0,0x0,0x0] DoNothing
UNIT


{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xF, SSA_0xE0_BQ) // Gary 
SHORT SSA_0xE0_BQ // gary
SHORT SSA_0xE2_BQ // n/a
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xF, SSA_0xE0_BD, 1800) // Gary
SHORT SSA_0xE0_BD // gary
SHORT 1800 // Gold 
SHORT V_Fisherman_BD // captain after HM obtained 
SHORT 600 // Gold 
}

	
#undef ChapterID