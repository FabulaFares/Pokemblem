#define ChapterID CeruleanCaveB3Ch
#define GenericA UnitCeruleanCaveWild
#define GenericB UnitCeruleanCaveBoss
#define ClassA ClassCeruleanCaveWildA
#define ClassB ClassCeruleanCaveWildB
#define ClassC ClassCeruleanCaveWildC
#define ClassD ClassCeruleanCaveWildD
#define ClassE ClassCeruleanCaveWildE
#define ClassF ClassCeruleanCaveWildF
#define WildLvl 69
#define TrainerL 69




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN




CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN



LocationBasedEvents:
House(0, ToCeruleanCaveB1, 5,7) 
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(5,7)
EscapeTileTerminator ; } 
#endif 


ToCeruleanCaveB1:
ChapterTransition(CeruleanCaveB1Ch, 1,7)




// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(29,18,ChapterID*2,450)
//CoinsTrap(57,15,(ChapterID*2)+1,600)

//RaftTrap(7,19)
//RaftTrap(7,20)
//RaftTrap(9,19)
//RockSmash(5,10)
//RockSmash(16,17)
//RockSmash(24,12)
//RockSmash(11,25)
//RockSmash(32,25)
//
//SaveCost(8,13) 


//RockSmash(3,2)
//StrengthBoulder(4,3)


//RedPokeballTrap(26,12, ChapterID*2, MoonStone)
//RedPokeballTrap(21, 5, (ChapterID*2)+1, EscapeRope, 5)

//StatAccessoryTrap(17,20, (ChapterID*2), BronzeShield_BoostIndex) 
//GoldPokeballTrap(14,13, (ChapterID*2)+1, Gust) 
//SkillAccessoryTrap(19,16, (ChapterID*2)+1, SealSklID) 
//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(17,15, ChapterID*2, RockyHelmetSkillID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

SignBTrap(24,13, ChapterID, 0x0) //no extra text 
SignATrap(6,3, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



//BerryTree(2,28,5)

//SkillScrollTrap(42,16, ChapterID*2, PatienceID)
//SpellScrollTrap(28,26, (ChapterID*2)+1, RockSlide)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(43,3) 




ENDTRAP
ALIGN 4


BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 



LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,5,5), Range(2,1,35,7)) 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,5,5), Range(17,8,32,19)) 

LOAD1 0x1 EnemyUnitsC
ENUN 

CHECK_EVENTID MewtwoDefeatedFlag
BEQ 1 sC s0 
DISA UnitMewtwoWild 
LABEL 1 

CHECK_EVENTID MewDefeatedFlag
BEQ 2 sC s0 
DISA UnitMewWild 
LABEL 2 

CHECK_EVENTID ArticunoDefeatedFlag
BEQ 3 sC s0 
DISA UnitArticunoWild 
LABEL 3 

CHECK_EVENTID ZapdosDefeatedFlag
BEQ 4 sC s0 
DISA UnitZapdosWild 
LABEL 4 

CHECK_EVENTID MoltresDefeatedFlag
BEQ 5 sC s0 
DISA UnitMoltresWild 
LABEL 5 


AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  

LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Elfire 
ALIGN 4

ArmoryItems:
SHLI SteelAxe
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

// no reinforcements. 6 unique classes 
EnemyUnitsA: 
// ClassA: Golbat, Graveller, Magneton, Hypno, Rhydon 
// ClassB: Arbok, Venomoth, Dodrio, Parasect, Lickitung
// ClassC: Raichu, Sandslash, Gloom, Weepinbell, Chansey 
// ClassD: Primeape, Ditto, Kadabra,	Rapidash,	Marowak
// ClassE: Wigglytuff, Clefable,	Raticate, Rhyhorn
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA GolbatID 0x0 Level(0, Enemy, 1)   [0,0] 0	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

EnemyUnitsB: 
// ClassF: Seadra, Slowbro, Seaking, Golduck, 
UNIT GenericA GolbatID 0x0 Level(0, Enemy, 1)   [0,0] 0	0x0 0x01 REDA2R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 


EnemyUnitsC:
UNIT UnitMewtwoWild MewtwoID 0x0 Level(0, Enemy, 1)   [7,13] 0	0x0 0 0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT UnitMewWild MewID 0x0 Level(0, Enemy, 1)   [7,15] 0	0x0 0 0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT UnitArticunoWild ArticunoID 0x0 Level(0, Enemy, 1)   [5,14] 0	0x0 0 0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT UnitZapdosWild ZapdosID 0x0 Level(0, Enemy, 1)   [9,14] 0	0x0 0 0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT UnitMoltresWild MoltresID 0x0 Level(0, Enemy, 1)   [7,17] 0	0x0 0 0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef ClassC
#undef ClassD
#undef ClassE
#undef ClassF
#undef WildLvl
#undef TrainerL
#undef ChapterID