#define ChapterID Route23NCh
#define GenericA UnitRoute23Wild
#define GenericB UnitRoute23Trainer
#define ClassA ClassRoute23WildA
#define ClassB ClassRoute23WildB
#define WildLvl 45
#define TrainerL 50




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
END_MAIN


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
CHAR 0 CallRevivePartyCostEvent [0x0, 0xE0] 0 // NPC
CHAR 0 CallRevivePartyCostEvent2 [0x0, 0xE1] 0 // NPC
//AllTrainersPostBattleTalk
END_MAIN

CallRevivePartyCostEvent:
SVAL s2 VictoryRoadNurseJoyText_A
SVAL s3 3000 // amount it costs 
CALL RevivePartyCostEvent
NoFade 
ENDA 

CallRevivePartyCostEvent2:
SVAL s2 VictoryRoadNurseJoyText_B
SVAL s3 3000 // amount it costs 
CALL RevivePartyCostEvent
NoFade 
ENDA 



LocationBasedEvents:
House(0, ToVictoryRoadB1, 5,45) 
House(0, ToVictoryRoadB2, 18,45) 
House(0, ToPokecenterLeague, 11,5) 
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToRoute23M [3,59][9,59] 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(4,59) 
EscapeTileEntry(6,59) 
EscapeTileEntry(5,45) 
EscapeTileEntry(18,45) 
EscapeTileEntry(11,5) 
EscapeTileTerminator ; } 
#endif 

ToVictoryRoadB1:
DigChapterTransition(ChapterID, VictoryRoadB1Ch, 11, 20)
ToVictoryRoadB2:
DigChapterTransition(ChapterID, VictoryRoadB2Ch, 38,12)
ToPokecenterLeague:
ChapterTransition(PokecenterLeagueCh, 11,16)
ToRoute23M:
ChapterTransition(Route23MCh, 5,1)




// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(22,14,ChapterID*2,1220)
//CoinsTrap(57,15,(ChapterID*2)+1,600)


//RockSmash(29,9)

//StrengthBoulder(4,3)

// Route 23S: VoiceOfPeaceAcc, DoubleEdge 
// Route 23M: MaxPotion, 1800g 
// Route 23N: EnergyBandT3 
//VictoryRoad: DarkPulse, RareCandy 
//VictoryRoad: Outrage, Protein, Iron 
//VictoryRoad: Megahorn 

StatAccessoryTrap(11,10, (ChapterID*2), EnergyBandT4_BoostIndex) 
//RedPokeballTrap(11,21, (ChapterID*2)+1, ExoticCandy) 
//RedPokeballTrap(34,7, (ChapterID*2), SuperPotion) 


//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

SignBTrap(9,7, ChapterID, 0x0) //no extra text 
SignATrap(3, 48, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



//BerryTree(32,11,5)
//BerryTree(36,11,5)

//SkillScrollTrap(21,9, ChapterID*2, DartingStanceID)
//SpellScrollTrap(16,38, (ChapterID*2)+1, HydroPump)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
SaveCost(19,47) 



//Flower(18,10)


ENDTRAP
ALIGN 4




BeginningScene:
LOAD1 1 NurseUnits 
ENUN 
MarkTrainerAsDefeated(0xE0) 
MarkTrainerAsDefeated(0xE1)
 

CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

CheckTrainerFlag(0xED) // based on unit IDs 0xE0-0xEF per chapter 
BNE 10 rC r0 
LOAD1 0x1 VeslyUnitGroup 
ENUN 
AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
LABEL 10 
LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

ALIGN 4
REDA7R48:
REDA [7,48] 0x0 0x0 0x0 0x0

ALIGN 4
REDA19R46:
REDA [19,46] 0x0 0x0 0x0 0x0

NurseUnits:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT 0xE0 ReceptionistID 0x0 Level(0, Enemy, 1)   [7,48] 0	0x0 0x01 REDA7R48 [0x0,0x0,0x0,0x0] DoNothingAI
UNIT 0xE1 ReceptionistID 0x0 Level(0, Enemy, 1)   [19,46] 0	0x0 0x01 REDA19R46 [0x0,0x0,0x0,0x0] DoNothingAI
UNIT


{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xED, 0, 0, 0, 1, 1, 0, 1, VeslyUnits) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0, VeslyRoute23ChallengeText )
BQ(1, VeslyRoute23ChallengeText )
BQ(0xD, VeslyRoute23ChallengeText )
TDQ_TableTerminator; 

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0, VeslyRoute23DefeatText , 0) 
BD(1, VeslyRoute23DefeatText , 0) 
BD(0xD, VeslyRoute23DefeatText , 5000) 
TDQ_TableTerminator 

TQ_Nuzlocke_ChEntry(ChapterID)
BQ(0xD, VeslyNuzlockeRoute23ChallengeText )
TDQ_TableTerminator ;} 




VeslyUnitGroup: // Self-insert time... 
UNIT 0xED RedID 0x0 Level(0, Enemy, 1) [11,10]  0b 0x0	0x1 REDA11R10 [SevenRangeWep,0x0,0x0,0x0] TrainerAI  
//UNIT GenericB	SquirtleID 0xE0 Level(0, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [JellyDonut,0x0,0x0,0x0] PursueWithoutHeedAI 
//UNIT GenericB	OnixID 0xE0 Level(0, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT // creator 



VeslyUnits:
UNIT GenericB	MukID 	0xED Level(0, Enemy, 1)   [9,9] 0b	0x0 	0x0  0x0 [Explosion,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	GolemID 	0xED Level(0, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 	 [Explosion,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	ElectrodeID 0xED Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [Explosion,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	WeezingID 	0xED Level(0, Enemy, 1)	  [11,10]  0b	0x0 0x0  0x0 [Explosion,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	SnorlaxID 	0xED Level(0, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [Explosion,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	ExeggutorID 0xED Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [Explosion,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID