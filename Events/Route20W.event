#define ChapterID Route20WCh
#define GenericA UnitRoute20Wild
#define GenericB UnitRoute20Trainer
#define ClassA ClassRoute20WWildA
#define ClassB ClassRoute20WWildB
#define WildLvl 35
#define TrainerL 38




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnitsA, 2, 4) 
Reinforce(0xF1, 1, ReinforcementUnitsB, 3, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN



LocationBasedEvents:
House(0, ToSeafoam, 53,14)
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToCinnabar [0,7][0,17] 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(53,14) 
EscapeTileEntry(0,9) 
EscapeTileEntry(0,12) 
EscapeTileEntry(0,15) 
EscapeTileTerminator ; } 
#endif 

ToSeafoam:
ChapterTransition(SeafoamB1Ch, 32, 21)

ToCinnabar:
ChapterTransition(CinnabarCh, 22, 15)




// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
CoinsTrap(22,14,ChapterID*2,1500)
//CoinsTrap(57,15,(ChapterID*2)+1,600)


//CutBush(12,10)
//RockSmash(29,9)

//StrengthBoulder(4,3)

StatAccessoryTrap(11, 13, (ChapterID*2), EnhancedWard_BoostIndex) 
RedPokeballTrap(37,8, (Route20ECh*2)+1, ExoticCandy) // not obtainable; it's in route 20E 
//RedPokeballTrap(34,7, (ChapterID*2), SuperPotion) 
//SkillAccessoryTrap(17,20, (ChapterID*2)+1, VantagePlusID) 

//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

SignBTrap(5,10, ChapterID, 0x0) //no extra text 
SignATrap(49,14, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



//BerryTree(32,11,5)
//BerryTree(36,11,5)

//SkillScrollTrap(21,9, ChapterID*2, DartingStanceID)
//SpellScrollTrap(12, 28, (ChapterID*2)+1, HoneClaws)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
SaveCost(47,5) 
HealTile(17,9)


//Flower(18,10)


ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 



LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Sea, Range(0,0,5,5), Range(1,6,30,17)) 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Sea, Range(0,0,5,5), Range(30,14,56,17)) 


AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
 // Bushes  
LOAD1 0x1 HumanTrainers
ENUN 
AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 



EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF0 SuspiciousWaterID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF1 SuspiciousWaterID 0x0 Level(0, Enemy, 1)   [0,4]  0b	0x0 0x01 REDA0R4  [0x0,0x0,0x0,0x0] BushAI
UNIT 


ReinforcementUnitsA:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 
ReinforcementUnitsB:
UNIT Reinforcement0 ClassB 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

 
HumanTrainers:
UNIT 0xE0 swimmer_f_waterID 0x0 Level(0, Enemy, 1) [36,16]  0b 0x0	0x1 REDA36R16  [OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE1 swimmer_m_waterID 0x0 Level(0, Enemy, 1) [27,12]  0b 0x0	0x1 REDA27R12  		[OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE2 swimmer_f_waterID 0x0 Level(0, Enemy, 1) [21,6]  0b 0x0	0x1 REDA21R6  		[OneRangeWep,0x0,0x0,0x0] TrainerAI
//UNIT 0xE3 swimmer_m_waterID 0x0 Level(0, Enemy, 1) [16,13]  0b 0x0	0x1 REDA16R13  		[OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE4 swimmer_f_waterID 0x0 Level(0, Enemy, 1) [8,7]  0b 0x0	1 REDA8R7	 			 [OneRangeWep,0x0,0x0,0x0] TrainerAI
//UNIT 0xE5 tuber_m_waterID 	0x0 Level(0, Enemy, 1) [3,9]  0b 0x0	0x1 REDA3R9  		[ThreeRangeWep,0x0,0x0,0x0] TrainerBossAI
UNIT

// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers0) 
MS_TableEntry(0xE1, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers1) 
MS_TableEntry(0xE2, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers2) 
MS_TableEntry(0xE3, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers3) 
MS_TableEntry(0xE4, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers4) 
MS_TableEntry(0xE5, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers5) 
MS_TableTerminator ; } 
{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0, R20W_0xE0_BQ)
BQ(1, R20W_0xE1_BQ)
BQ(2, R20W_0xE2_BQ)
BQ(3, R20W_0xE3_BQ)
BQ(4, R20W_0xE4_BQ)
BQ(5, R20W_0xE5_BQ)
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0, R20W_0xE0_BD, 600)
BD(1, R20W_0xE1_BD, 600)
BD(2, R20W_0xE2_BD, 600)
BD(3, R20W_0xE3_BD, 600)
BD(4, R20W_0xE4_BD, 600)
BD(5, R20W_0xE5_BD, 600)
TDQ_TableTerminator ; }


// 20:
// TentacruelID	SeadraID	SeakingID	0x00
// GyaradosID	GolduckID	KinglerID


EnemyTrainers0: // swimmer_f_waterID
UNIT GenericB 	SeadraID 0xE0 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	GyaradosID 0xE0 	Level(0, Enemy, 1) [10,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	KinglerID 0xE0 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT

EnemyTrainers1: // swimmer_m_water
UNIT GenericB 	TentacruelID 	0xE1 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	TentacruelID		0xE1 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
//UNIT GenericB 	TentacruelID 	0xE1 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	TentacruelID		0xE1 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT


EnemyTrainers2: // swimmer_f_water
UNIT GenericB 	SeakingID 		0xE2 		Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB 	GolduckID 		0xE2 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
//UNIT GenericB 	GolduckID 		0xE2 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB 	SeakingID 		0xE2 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT


EnemyTrainers3: // swimmer_m_waterID
UNIT GenericB 	KinglerID 	0xE3 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
//UNIT GenericB 	SeakingID 		0xE3 		Level(0, Enemy, 1) [11,11]   0b 0x0 0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB 	GyaradosID 		0xE3 		Level(0, Enemy, 1) [9,9]     0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB 	SeakingID 	0xE3 		Level(0, Enemy, 1) [11,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT

EnemyTrainers4: // swimmer_f_waterID
UNIT GenericB 	GolduckID		0xE4 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericB 	TentacruelID 		0xE4 		Level(0, Enemy, 1) [11,11]   0b 0x0 0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
//UNIT GenericB 	SeakingID 		0xE4 		Level(0, Enemy, 1) [9,9]     0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericB 	KinglerID		0xE4 		Level(0, Enemy, 1) [11,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT

EnemyTrainers5: // tuber
UNIT GenericB 	SeakingID 		0xE5 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT GenericB 	SeadraID 		0xE5 		Level(0, Enemy, 1) [11,11]   0b 0x0 0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT GenericB 	SeakingID 		0xE5 		Level(0, Enemy, 1) [9,9]     0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT

	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID