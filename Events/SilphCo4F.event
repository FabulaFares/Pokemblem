#define ChapterID SilphCo4FCh
#define GenericA UnitRoute17Wild
#define GenericB UnitCyclingRoadTrainer
#define ClassA ClassRoute17WildA
#define ClassB ClassRoute17WildB
#define WildLvl 33
#define TrainerL 36




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter: // Use this in all non-gym / non-tutorial chapters
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
UnusedPointers //POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2_Empty
POIN Units1_Empty Units1_Empty  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene_Empty 

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnits, 1, 4) 
Reinforce(0xF1, 1, ReinforcementUnits, 2, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN



LocationBasedEvents:
House(0, ToSilphCo3F_Stairs, 20,3)
House(0, ToSilphCo5F, 11,4)
Stairs(0,12,18,12,18) // does nothing but will activate the range event 
Stairs(1,23,19,23,19)
END_MAIN

ToSilphCo2F_Tele:
ForcedChapterTransition(SilphCo2FCh, 8,20) 
ToSilphCo3F_Tele:
ForcedChapterTransition(SilphCo3FCh, 19,7)


ToSilphCo3F_Stairs:
ChapterTransition(SilphCo3FCh, 31,3)
ToSilphCo5F:
ChapterTransition(SilphCo5FCh, 3,7)

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
AREA 0 ToSilphCo2F_Tele [23,19][23,19] 
AREA 0 ToSilphCo3F_Tele [12,18][12,18] 
AREA 0 NW_StatsDrained [4,11][4,12] // nw 
//AREA 0 NW_StatsDrained [3,11][4,12] // nw 
AREA 0 NW_StatsDrained [9,17][9,18] // sw
//AREA 0 NW_StatsDrained [8,17][9,18] // sw
AREA 0 NW_StatsDrained [22,8][23,8] // ne 
//AREA 0 NW_StatsDrained [22,7][23,8] // ne 
AREA 0 NW_StatsDrained [22,14][23,14] // se 
//AREA 0 NW_StatsDrained [22,13][23,14] // se 
AREA 0 HealActive [2,17][2,18]
AREA 0 HealActive [4,17][4,18]
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 

END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(20,3) 
EscapeTileEntry(11,4) 

EscapeTileTerminator ; } 
#endif 

HealActive:
UseVulnerary(0x7FFF, 99) // Restore health 
DebuffUnit(0x7FFF, 0x0) // -10 str/def/skl, -5 luk 
NoFade 
ENDA 

NW_StatsDrained:
PlayerInRange
TutText(StrFeelsSapped)
DebuffUnit(0x7FFF, 0x0050A0AA) // -10 str/def/skl, -5 luk 
NoFade 
ENDA 


// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 

Traps1:

//MineTrap(3,11)
MineTrap(4,11)
//MineTrap(3,12)
MineTrap(4,12)

//MineTrap(8,17)
MineTrap(9,17)
//MineTrap(8,18)
MineTrap(9,18)

//MineTrap(22,7)
//MineTrap(23,7)
MineTrap(22,8)
MineTrap(23,8)

//MineTrap(22,13)
//MineTrap(23,13)
MineTrap(22,14)
MineTrap(23,14)

EnterTutTrap(25,4, OutOfServiceText)

//CoinsTrap(29,18,ChapterID*2,450)
//CoinsTrap(57,15,(ChapterID*2)+1,600)


//SilphCo4F: Flamethrower Carbos 
//Route16: Fly, PaddedShieldT2 

SaveCost(7,15)
//CutBush(12,10)
//RockSmash(29,9)

//StrengthBoulder(4,3)



//RedPokeballTrap(49,9, (ChapterID*2)+1, Zinc) 
//RedPokeballTrap(8,31, (ChapterID*2), Carbos) 
//SkillAccessoryTrap(15,23, (ChapterID*2)+1, CounterMagicID) 

//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

SpellScrollTrap(20,11, (ChapterID*2)+1, BugBuzz) 


ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(15,7,20,11)) //E patch 


AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
 // Bushes  
LOAD1 0x1 HumanTrainers
ENUN 
AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



// wilds: doduo, dodrio, ponyta 



EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT 0xF0 TeleporterID 0x0 Level(0, Enemy, 1)   [11,19]  0b	0x0 0 0  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF1 TeleporterID 0x0 Level(0, Enemy, 1)   [21,19]  0b	0x0 0 0  [0x0,0x0,0x0,0x0] BushAI
UNIT 

// Teleporter / blank unit to spawn Porygons? 
ReinforcementUnits:
UNIT Reinforcement0 PorygonID 0x0 Level(0, Enemy, 1)   [0,0] 0b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI
UNIT 



HumanTrainers:
UNIT 0xE0 rocket_mID 0x0 Level(0, Enemy, 1) [25,9]  0b 0x0	0x0 0x0  [ThreeRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE1 rocket_fID 0x0 Level(0, Enemy, 1) [9,9]  0b 0x0	0x0 0x0  [ThreeRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE2 scientistID 0x0 Level(0, Enemy, 1) [15,16]  0b 0x0	0x0 0x0  [Tackle,0x0,0x0,0x0] TrainerFleeAI // hiding 
UNIT

// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers0) 
MS_TableEntry(0xE1, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers1) 
MS_TableEntry(0xE2, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers2) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
SHORT SilphCo_4F_0xE0_BQ // 0xE0 
SHORT SilphCo_4F_0xE1_BQ // 0xE0 
SHORT SilphCo_4F_0xE2_BQ // 0xE0 
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
SHORT SilphCo_4F_0xE0_BD // 0xE0 
SHORT 600 // Gold 
SHORT SilphCo_4F_0xE1_BD // 0xE0 
SHORT 600 // Gold 
SHORT SilphCo_4F_0xE2_BD // 0xE0 
SHORT 600 // Gold 
TDQ_TableTerminator ; }

// wild: Porygon 
// trainer's 2F: Zubat/Golbat, Rattata/Raticate, Machop/Machoke 
// Trainer's 3F: Ekans/Arbok, Koffing/Weezing, Zubat, Rattata 
// Trainer's 4F: Drowzee, Grimer, Cubone, Golbat, Raticate, Machoke 

EnemyTrainers0: 
UNIT GenericB 	ZubatID 0xE0 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	ZubatID 0xE0 	Level(0, Enemy, 1) [10,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	GolbatID 0xE0 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
//UNIT GenericB 	ZubatID 0xE0 	Level(0, Enemy, 1) [9,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	ZubatID 0xE0 	Level(0, Enemy, 1) [9,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT

EnemyTrainers1: 
UNIT GenericB 	RattataID 	0xE1 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	RattataID 		0xE1 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
//UNIT GenericB 	RaticateID 	0xE1 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	RattataID 		0xE1 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	RattataID 		0xE1 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT

EnemyTrainers2: 
UNIT GenericB 	GolbatID 	0xE2 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB 	RaticateID 		0xE2 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB 	MachokeID 		0xE2 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT




#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID