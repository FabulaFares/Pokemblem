#define ChapterID PokecenterLeagueCh
#define GenericA 0xF0
#define GenericB UnitRoute21Trainer
#define ClassA ClassRoute21WildA
#define ClassB ClassRoute21WildB
#define WildLvl 38
#define TrainerL 50




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN

ALIGN 4
ShopItems_A:  // Supplies + StatBoosters 
//SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
//SHLI 0
BYTE Revive 1 
BYTE SuperRepel 5
BYTE EscapeRope 5
BYTE WarpCrystal 5
SHLI SuperPotion JellyDonut HyperPotion MaxPotion FullHeal HPUp Protein Calcium Carbos Iron Zinc RareCandy
//SHLI MoonStone FireStone WaterStone ThunderStone LeafStone LinkStone 
BYTE $0 0; ALIGN 4


ALIGN 4
ShopItems_B: // TMs CDs 
//SpellScroll IceBeam SpellScroll TriAttack
//BYTE SpellScroll Psychic SpellScroll PetalDance
//BYTE SpellScroll Screech SpellScroll SwordsDance
//BYTE SpellScroll BugBuzz SpellScroll CalmMind
BYTE SpellScroll SolarBeam  SpellScroll SkyAttack
BYTE SpellScroll HiJumpKick SpellScroll BulkUp
BYTE SpellScroll ThunderMove SpellScroll HoneClaws
BYTE SpellScroll EarthPower SpellScroll Blizzard
BYTE SpellScroll XScissor SpellScroll HydroPump
BYTE SpellScroll HyperBeam //SpellScroll Sludge
BYTE SpellScroll ShadowBall SpellScroll FireBlast
BYTE SpellScroll Earthquake SpellScroll Megahorn 
BYTE SpellScroll DoubleEdge SpellScroll Outrage
BYTE SpellScroll DarkPulse
BYTE SpellScroll MeteorMash 
BYTE $0 0; ALIGN 4

ALIGN 4
ShopItems_C: // Skill Scrolls 
// 2nd store in Viridian? Or at league? 
BYTE SkillScroll DartingStanceID SkillScroll ChargeID SkillScroll PursuitID
BYTE SkillScroll WrathID SkillScroll SilentPrideID SkillScroll QuickDrawID 
BYTE SkillScroll FieryBloodID SkillScroll RenewalID 
BYTE $0 0; ALIGN 4




/*
LuckyBracerT3, EvoStones 
, AmaterasuAcc, 
Route7: WrathSS
, Surf, MaxPotion
, LinkStone 
 , SilentPrideSS, Calcium, HPUp, SteelShield, 3000g
SilphCo5F: SilphScope 
 , MuscleBandT3 
 , HoplonGuard 
Route8: CharmSS, LeafStone, 800g
PowerPlant: , VintageBoots, ThunderStone, Carbos 
Route20E: EnhancedWard
Seafoam: WaterStone , Calcium, MaxPotion , 
Route20W:  , ExoticCandy 
Cinnabar:  , WiseGlassesT3
Mansion:  , Zinc, 1500g , FireStone 
Mansion:  , , StuddedShield 
CinnabarGym: , FieryBloodSS
Route21:  , ExoticCandy 
ViridianGym: , , Fury 
Route22: GaleforceAcc, BlossomAcc
Route 23S: VoiceOfPeaceAcc,  
Route 23M: MaxPotion,  
VictoryRoadB1: RareCandy, Iron, 2000g
VictoryRoadB2:  , Protein, RockyHelmetSS 
VictoryRoadB3:  , MaxPotion 
Route 23N: EnergyBandT3
*/




ALIGN 4
ShopItems_D: // StatAccessories 
BYTE StatAccessory MuscleBandT3_BoostIndex 
BYTE StatAccessory WiseGlassesT3_BoostIndex
BYTE StatAccessory EnergyBandT3_BoostIndex 
BYTE StatAccessory StuddedShield_BoostIndex
BYTE StatAccessory SteelShield_BoostIndex 
BYTE StatAccessory EnhancedWard_BoostIndex 
BYTE StatAccessory VintageBoots_BoostIndex 
//BYTE StatAccessory SilphScope_BoostIndex 
BYTE StatAccessory LuckyBracerT3_BoostIndex
BYTE $0 0; ALIGN 4


ALIGN 4
ShopItems_E: // SkillAccessories ? 
BYTE SkillAccShop(RockyHelmetSkillID)
//BYTE SkillAccShop(FuryID) // berserk gene too good 
BYTE SkillAccShop(WaryFighterID)
BYTE SkillAccShop(RenewalID)
//SealSpdAccessory 
BYTE SkillAccShop(PoisonStrikeID)
BYTE SkillAccShop(GrislyWoundID)
BYTE SkillAccShop(SavageBlowID)
BYTE SkillAccShop(VantagePlusID)
BYTE SkillAccShop(DazzleID)
BYTE SkillAccShop(BreathOfLifeID)
BYTE SkillAccShop(MiracleID)
BYTE SkillAccShop(CounterMagicID)
BYTE SkillAccShop(CounterID)
BYTE SkillAccShop(AmaterasuID)
BYTE SkillAccShop(BlossomID)
//BYTE SkillAccShop(SilphScopeID)
BYTE HoplonShield 1 
BYTE $0 0; ALIGN 4





LocationBasedEvents:
House(0, ToRoute23N, 11,16) 
House(0, ToLorelei, 6,1) 
Vendor(ShopItems_A,0,9)
Vendor(ShopItems_B,1,9)
Vendor(ShopItems_C,2,9)
Vendor(ShopItems_D,10,9)
Vendor(ShopItems_E,11,9)
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(11,16) 
EscapeTileEntry(6,1) 
EscapeTileTerminator ; } 
#endif 

ToRoute23N:
ChapterTransition(Route23NCh, 11, 6)
ToLorelei:
ChapterTransition(LoreleiCh, 12, 21)





// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(22,14,ChapterID*2,1220)
//CoinsTrap(57,15,(ChapterID*2)+1,600)


//RockSmash(29,9)

//StrengthBoulder(4,3)

//StatAccessoryTrap(43, 13, (ChapterID*2), EnhancedWard_BoostIndex) 
//RedPokeballTrap(11,21, (ChapterID*2)+1, ExoticCandy) 
//RedPokeballTrap(34,7, (ChapterID*2), SuperPotion) 
//SkillAccessoryTrap(26,4, (ChapterID*2)+1, GaleforceID) 
//SkillAccessoryTrap(13,11, (ChapterID*2), BlossomID) 


//Generic(8,5,EarthbadgeObtained, BlankSMS, 0) // 0 sprite ID 
//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

//SignBTrap(10,12, ChapterID, 0x0) //no extra text 
//SignATrap(42,11, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 

Save(17,11)


//BerryTree(32,11,5)
//BerryTree(36,11,5)

//SkillScrollTrap(21,9, ChapterID*2, DartingStanceID)
//SpellScrollTrap(16,38, (ChapterID*2)+1, HydroPump)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(47,5) 



//Flower(18,10)


ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

//CheckTrainerFlag(0xEF) // based on unit IDs 0xE0-0xEF per chapter 
//BNE 10 rC r0 
//LOAD1 0x1 GaryBattleUnitGroup 
//ENUN 
//LABEL 10 
//
//
ENUT IndigoPlateauArrived
LOAD1 0x1 UnitsA
ENUN
//RandomizeEnemyCoords(Grass, Range(0,0,3,3), Range(2,2,6,13)) 
//
//LOAD1 0x1 EnemyUnitsB
//ENUN 
//AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
//
//CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 



UnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA NurseID 0x0 Level(0, NPC, 1)   [17,10] 0	0x0 0x01 REDA17R10 [0x0,0x0,0x0,0x0] DoNothingAI
UNIT GenericA ClerkID 0x0 Level(0, NPC, 1)   [0,7] 0	0x0 0x01 REDA0R7 [0x0,0x0,0x0,0x0] DoNothingAI
UNIT GenericA ClerkID 0x0 Level(0, NPC, 1)   [1,7] 0	0x0 0x01 REDA1R7 [0x0,0x0,0x0,0x0] DoNothingAI
UNIT GenericA ClerkID 0x0 Level(0, NPC, 1)   [2,7] 0	0x0 0x01 REDA2R7 [0x0,0x0,0x0,0x0] DoNothingAI
UNIT GenericA ClerkID 0x0 Level(0, NPC, 1)   [10,7] 0	0x0 0x01 REDA10R7 [0x0,0x0,0x0,0x0] DoNothingAI
UNIT GenericA ClerkID 0x0 Level(0, NPC, 1)   [11,7] 0	0x0 0x01 REDA11R7 [0x0,0x0,0x0,0x0] DoNothingAI
UNIT 



{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xEF, 0, 0, 0, 1, 1, 0, 1, GaryBattleUnitGroup) 
MS_TableEntry(0xEF, 0, 0, 0, 1, 1, 0, 1, GaryBattleUnitGroup) 
MS_TableEntry(0xEF, 0, 0, 0, 1, 1, 0, 1, GaryBattleUnitGroup) 
MS_TableEntry(0xEF, 0, 0, 0, 1, 1, 0, 1, GaryBattleUnitGroup) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xF, GaryRoute22ChallengeText)
TDQ_TableTerminator; 

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xF, GaryRoute22DefeatText, 3000) 
TDQ_TableTerminator ; } 

GaryBattleUnitGroup:
UNIT 0xEF blueID 0x0 Level(0, Enemy, 1) [26,4]  0b 0x0	0x1 REDA26R4 [SevenRangeWep,0x0,0x0,0x0] TrainerAI  
//UNIT GenericB	SquirtleID 0xE0 Level(0, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [JellyDonut,0x0,0x0,0x0] PursueWithoutHeedAI 
//UNIT GenericB	OnixID 0xE0 Level(0, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT 






	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID
