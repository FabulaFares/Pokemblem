#define ChapterID Route12SCh
#define GenericA UnitRoute12Wild
#define GenericB UnitRoute12Trainer
#define ClassA ClassRoute12WildA
#define ClassB ClassRoute12WildB
#define WildLvl 21
#define TrainerL 24




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
TurnEventPlayer(0x10,BerserkSnorlax,0,255)
TurnEventPlayer(0,SleepSnorlax,0,255)
END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnits, 3, 4) 
Reinforce(0xF1, 1, ReinforcementUnits, 5, 4) 
Reinforce(0xF2, 1, ReinforcementUnitsB, 8, 4) 
}

SleepSnorlax:
CHECK_EVENTID PokefluteFlag
BNE 63 sC s0 
SetUnitStatus(0xEE, BadStatus, 0xF<<4|SleepStatusID)
LABEL 63 
NoFade 
ENDA 

BerserkSnorlax:
SetUnitStatus(0xEE, BadStatus, 3<<4|BerserkStatusID)
NoFade 
ENDA 

CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
CharacterEventBothWays(0,AggroSnorlaxEvent, 0, 0xEE)
AllTrainersPostBattleTalk
END_MAIN

AggroSnorlaxEvent:
CHECK_EVENTID PokefluteFlag 
BEQ 10 sC s0 
RemoveTrap(9,6)
SVAL s1 TrainerAI_chai
CHAI 0xEE
UnmarkTrainerAsDefeated(0xEE)
MUSCFAST JigglypuffSFX // lol 
BottomWallText(PlayPokefluteText)
ENUF 0x10 
SetUnitStatus(0xEE, BadStatus, 0) // [0202D22C]?
STAL 40
ReturnToMapBGM
PauseFreeMovement
SET_ACTIVE 0
EndTurn
GOTO 63 
LABEL 10 
TutText(SnorlaxSleepingText)
LABEL 63 
NoFade
ENDA 

SnorlaxRestEvent: // Prevent AoE from damaging him until battle started 
CHECK_EVENTID PokefluteFlag
BEQ 10 sC s0
CHECK_EVENTID PlayableCutsceneFlag // don't heal once battle started 
BNE 63 sC s0 
LABEL 10  
UseVulnerary(0xEE, 99)
LABEL 63 
NoFade 
ENDA 

LocationBasedEvents:
House(0, EnterRoute12SHouse, 12,20) 
END_MAIN

EnterRoute12SHouse:
TutText(Route12FisherHouseText)
NoFade 
ENDA 

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToRoute11 [0,3] [0,5] 
AREA 0 ToRoute12N [14,0] [15,0] 
AREA 0 ToRoute13 [14,53] [15,53] 
//AFEV 0 SnorlaxRestEvent 0
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(0,4) 
EscapeTileEntry(14,0) 
EscapeTileEntry(15,0) 
EscapeTileEntry(14,53)
EscapeTileEntry(15,53)
EscapeTileTerminator ; } 
#endif 

ToRoute11:
ChapterTransition(Route11Ch, 50,10)

ToRoute12N:
ChapterTransition(Route12NCh, 14,59)

ToRoute13:
ChapterTransition(Route13Ch, 52,0)



// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(29,18,ChapterID*2,450)
//CoinsTrap(57,15,(ChapterID*2)+1,600)


//CutBush(12,10)
//RockSmash(29,9)

//StrengthBoulder(4,3)


//StatAccessoryTrap(17,20, (ChapterID*2), BronzeShield_BoostIndex) 
RedPokeballTrap(19,20, (ChapterID*2)+1, WaterStone) 
//SkillAccessoryTrap(17,20, (ChapterID*2)+1, VantagePlusID) 

//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 

SpellScrollTrap(11,37, (ChapterID*2)+1, Clamp)
SkillScrollTrap(9,45, ChapterID*2, FierceStanceID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

SignBTrap(18,45, ChapterID, 0x0) //no extra text 
SignATrap(10,7, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



BerryTree(16,18,5)
BerryTree(9,34,5)

//SkillScrollTrap(42,16, ChapterID*2, PatienceID)
//
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
SaveCost(16,19) // beside house  

InvisibleObstacle(9,6)


ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

// Snorlax [14,4] 

LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Shallow, Range(0,0,5,5), Range(8,10,18,25)) //N patch 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Shallow, Range(0,0,5,5), Range(8,28,20,43)) //Mid patch 
LOAD1 0x1 EnemyUnitsC
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(8,46,11,52)) //S patch 

AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
 // Bushes
LOAD1 0x1 SnorlaxGroup
ENUN 
MarkTrainerAsDefeated(0xEE)
ENUT 0x10 

 
LOAD1 0x1 HumanTrainers
ENUN 

AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent
SetUnitStatus(0xEE, CurrentHP, 40)
SetUnitStatus(0xEE, BadStatus, 0xF<<4|SleepStatusID)
LABEL 0x63
NoFade
ENDA

// lifetaker uses warp in anim on enemies defeated lol 

ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 



EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
//UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF0 SuspiciousWaterID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
//UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF1 SuspiciousWaterID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsC:
UNIT GenericA ClassRoute24WildA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF2 BushID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

ReinforcementUnits:
UNIT Reinforcement0 ClassB 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

 
ReinforcementUnitsB:
UNIT Reinforcement0 ClassRoute24WildA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers0) 
MS_TableEntry(0xE1, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers1) 
MS_TableEntry(0xE2, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers2) 
MS_TableEntry(0xE3, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers3) 
MS_TableEntry(0xEE, 0, 0, 0, 1, 0, 0, 1, SnorlaxSummons) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xE, SnorlaxGrumpyText)
SHORT R12S_0xE0_BQ // 0xE0 
SHORT R12S_0xE1_BQ // 0xE0 
SHORT R12S_0xE2_BQ // 0xE0 
SHORT R12S_0xE3_BQ // 0xE0 
TBQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xE, SnorlaxLeftText, 0)
SHORT R12S_0xE0_BD // 0xE0 
SHORT 650 // Gold 
SHORT R12S_0xE1_BD // 0xE0 
SHORT 400 // Gold 
SHORT R12S_0xE2_BD // 0xE0 
SHORT 900 // Gold 
SHORT R12S_0xE3_BD // 0xE0 
SHORT 600 // Gold 
TDQ_TableTerminator ; }

// all trainers with the same sprite will face the same direction! 
HumanTrainers:
UNIT 0xE0 fisherID 0x0 Level(0, Enemy, 1) [10,18]  0b 0x0	0x0 0x0  [ThreeRangeWep,0x0,0x0,0x0] TrainerAI
//UNIT 0xE1 fisherID 0x0 Level(0, Enemy, 1) [17,27]  0b 0x0	0x0 0x0  [ThreeRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE2 fisherID 0x0 Level(0, Enemy, 1) [10,39]  0b 0x0	0x0 0x0  [ThreeRangeWep,0x0,0x0,0x0] TrainerAI
//UNIT 0xE3 fisherID 0x0 Level(0, Enemy, 1) [18,37]  0b 0x0	0x0 0x0  [ThreeRangeWep,0x0,0x0,0x0] TrainerAI
UNIT

SnorlaxGroup:
UNIT 0xEE SnorlaxID 0x0 Level(0, Enemy, 1) [9,6]  0b 0x0	0x0 0x0  [Leer,Headbutt,0x0,0x0] DoNothingAI
UNIT

SnorlaxSummons:
UNIT GenericA 	MagikarpID 0xEE 	Level(5, Enemy, 1) [10,10] 0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	MagikarpID 0xEE 	Level(5, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	MagikarpID 0xEE 	Level(5, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	MagikarpID 0xEE 	Level(5, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	MagikarpID 0xEE 	Level(5, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	MagikarpID 0xEE 	Level(5, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT

// Tentacool? 
// Krabby, Horsea, poliwag - wild 
// trainer exclusive: psyduck, vaporeon 


EnemyTrainers0: // fisher 
UNIT GenericB 	KrabbyID 0xE0 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	KrabbyID 0xE0 	Level(0, Enemy, 1) [10,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	KrabbyID 0xE0 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	KrabbyID 0xE0 	Level(0, Enemy, 1) [9,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	KrabbyID 0xE0 	Level(0, Enemy, 1) [10,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	KrabbyID 0xE0 	Level(0, Enemy, 1) [11,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT

EnemyTrainers1: // fisher 
UNIT GenericB 	TentacoolID 	0xE1 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	PoliwagID 		0xE1 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	HorseaID 		0xE1 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	PoliwagID 		0xE1 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT

EnemyTrainers2: // fisher 
UNIT GenericB 	PoliwagID 		0xE2 		Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB 	HorseaID 		0xE2 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
//UNIT GenericB 	VaporeonID 		0xE2 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB 	PsyduckID 		0xE2 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT

EnemyTrainers3: // fisher 
UNIT GenericB 	TentacoolID 	0xE3 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB 	PsyduckID 		0xE3 		Level(0, Enemy, 1) [11,11]   0b 0x0 0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB 	PsyduckID 		0xE3 		Level(0, Enemy, 1) [9,9]     0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB 	TentacoolID 	0xE3 		Level(0, Enemy, 1) [11,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT



	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID