#define ChapterID Route2NCh
#define GenericA UnitRoute2NWild
#define GenericB UnitRoute2NTrainer
#define ClassA ClassRoute2NWildA
#define ClassB ClassRoute2NWildB
#define WildLvl 9 
#define TrainerL 9 
#define KadabraLvl 20




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
TurnEventPlayer(DisableTutFlag_A, TutMsg1, 0, 255) // 
END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnits, 3, 4) // Top 
Reinforce(0xF1, 1, ReinforcementUnits, 2, 3) // Middle 
Reinforce(0xF2, 1, ReinforcementUnits, 1, 3) // Bottom 
}

CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
END_MAIN



LocationBasedEvents:
House(0, ToDiglettsCave, 17,11)
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies

AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToRoute2S [18,41] [19,41] 
AREA 0 ToViridianForestN [5,13] [6,13] 
AREA 0 ToPewter [8,0] [11,0] 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(18,41) 
EscapeTileEntry(19,41) 
EscapeTileEntry(5,13) 
EscapeTileEntry(6,13) 
EscapeTileEntry(10,0) 
EscapeTileEntry(17,11) 
EscapeTileTerminator ; } 
#endif 

 
ToPewter:
ChapterTransition(PewterCh, 19, 36)

ToViridianForestN:
ChapterTransition(ViridianForestNCh, 5, 7)

ToDiglettsCave:
ForcedChapterTransition(DiglettsCaveCh, 4, 1)

ToRoute2S:
ChapterTransition(Route2SCh, 19, 5)



TutMsg1: 
CHECK_EVENTID DisableTutMsgsFlag
BNE 99 sC s0 
ENUF DisableTutFlag_A
SVAL s1 ((ChapterID*2)+(HelpMsgFlagOffset<<3)) 
ASMC CheckNewFlag_ASMC 
BNE 99 sC s0 
CountPlayersInRange_ASMC(2, 2, 11, 12) 
BEQ 99 sC s0 
ENUT DisableTutFlag_A
EVBIT_MODIFY 4
PauseFreeMovement
STAL 5
CAM1 [9,7]
CUMO [9,7]
STAL 30
CURE  
TutText(TrainerTip_Accessory)
SVAL s1 ((ChapterID*2)+(HelpMsgFlagOffset<<3)) 
ASMC SetNewFlag_ASMC 
LABEL 99 
NoFade 
ENDA 

// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(28,14,ChapterID*2,350)
//CoinsTrap(43,13,(ChapterID*2)+1,400)

CutBush(11,13)

CutBush(21,10)

//RockSmash(3,2)
TutSign(9,7,ChapterID*2, TrainerTip_Accessory)

//StrengthBoulder(4,3)

CoinsTrap(16,35, ChapterID*2, 900)
//RedPokeballTrap(16,35, ChapterID*2, SuperPotion)
//RedPokeballTrap(16,35, ChapterID*2, SuperPotion)
//StatAccessoryTrap(2,9, (ChapterID*2), WiseGlasses_BoostIndex) 
//GoldPokeballTrap(14,13, (ChapterID*2)+1, Gust) 
//SkillAccessoryTrap(17,20, (ChapterID*2)+1, VantagePlusID) 

SignBTrap(20,38, ChapterID, 0x0) //no extra text 
SignATrap(14,12, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 

//SkillScrollTrap(15,11, ChapterID*2, AcrobatID)
SpellScrollTrap(14,3, (ChapterID*2)+1, MegaPunch)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(43,3) 
SaveCost(16,15)


BerryTree(16,28,5)
BerryTree(21,30,5)




ENDTRAP
ALIGN 4


BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 



LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,2,2), Range(2,2,5,7)) //NW section of the grass 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,2,2), Range(2,2,8,8)) //grass



AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  & bushes 

LOAD1 0x1 BossUnit
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,1,1), Range(16,27,21,31)) //SE 
UnmarkTrainerAsDefeated(0xEE)
AutoLevelUnits(KadabraLvl, True, 0xE0EF) // Wilds  & bushes 


CALL SetBushHpEvent
//AutoLevelUnits(85, True, 0x01) // Wilds  & bushes 
//SENQUEUE 1 


LABEL 0x63
//ASMC 0x800D919
//SENQUEUE 
//SENQUEUE 



NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4





Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [1,2] 001b	0x0 0x01 REDA1R2 [0x0,0x0,0x0,0x0] AttackInRangeAI
//UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyUnitsB:
UNIT 0xF0 BushID 0x0 Level(0, Enemy, 1)   [1,0] 0b	0x0 0x01 REDA1R0 [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF1 BushID 0x0 Level(0, Enemy, 1)   [1,1] 0b	0x0 0x01 REDA1R1 [0x0,0x0,0x0,0x0] BushAI

UNIT 

ReinforcementUnits:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 




BossUnit:
UNIT 0xEE KadabraID 0x0 Level(0, Enemy, 1) [0,0]  0b 0x0	0x1 REDA0R0 [Confusion, Psybeam, Growl,0x0] TrainerAI  // Trainer has its 1st wep removed when summoning 
UNIT 

BossSummons: // 1st class must be >9 even if monsters because of Gary cutscenes using <9 to check for starters / cutscenes 
UNIT GenericA 	AbraID 		0xEE 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT GenericA 	ClassA 		0xEE 	Level(0, Enemy, 1) [11,11]  1b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT GenericA 	ClassA 		0xEE 	Level(0, Enemy, 1) [10,10]  1b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT GenericA 	ClassA 		0xEE 	Level(0, Enemy, 1) [9,9]  1b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT GenericA 	AbraID		0xEE 	Level(0, Enemy, 1) [11,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT



// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xEE, 0, 0, 0, 1, 1, 0, 1, BossSummons)  
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xE, 0x00)
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xE, 0x00, 0)
TDQ_TableTerminator ; }

	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID