#define ChapterID SeafoamB3Ch
#define GenericA UnitSeafoamWild
#define GenericB UnitSeafoamTrainer
#define ClassA ClassSeafoamWildA
#define ClassB ClassSeafoamWildB
#define WildLvl 50
#define TrainerL 38




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnitsA, 2, 4) 
Reinforce(0xF1, 1, ReinforcementUnitsB, 3, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN



LocationBasedEvents:
House(0, ToSeafoamB2E, 32,14)
House(0, ToSeafoamB2S, 25,19)
House(0, ToSeafoamB2M, 17,9)
House(0, ToSeafoamB2W, 7,4)
House(0, ToSeafoamB4E, 32,4)
House(0, ToSeafoamB4W, 7,17)
House(0, ToSeafoamB4SE, 31,17)
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToSeafoamB4EHole [27,8][27,8] 
AREA 0 ToSeafoamB4WHole [24,8][24,8] 
AREA 0 DropBoulderInWestHoleEvent [22,6][26,10] 
AREA 0 DropBoulderInEastHoleEvent [27,6][29,10] 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(32,14) 
EscapeTileEntry(25,19) 
EscapeTileEntry(17,9) 
EscapeTileEntry(7,4) 
EscapeTileEntry(32,4) 
EscapeTileEntry(7,17) 
EscapeTileEntry(31,17) 
EscapeTileTerminator ; } 
#endif 

ToSeafoamB2E:
ChapterTransition(SeafoamB2Ch, 32,13)
ToSeafoamB2S:
ChapterTransition(SeafoamB2Ch, 24,19)
ToSeafoamB2M:
ChapterTransition(SeafoamB2Ch, 17,10)
ToSeafoamB2W:
ChapterTransition(SeafoamB2Ch, 6,4)

ToSeafoamB4E:
ChapterTransition(SeafoamB4Ch, 29,4)
ToSeafoamB4W:
ChapterTransition(SeafoamB4Ch, 7,13)
ToSeafoamB4SE:
ChapterTransition(SeafoamB4Ch, 30,15)

ToSeafoamB4EHole:
CALL FallInHoleEffect
ForcedChapterTransitionHole(SeafoamB4Ch, 27,9)

ToSeafoamB4WHole:
CALL FallInHoleEffect
CHECK_EVENTID B3_BoulderAFlag 
BEQ 4 sC s0 
CHECK_EVENTID B3_BoulderBFlag 
BEQ 4 sC s0 
ForcedChapterTransitionHole(SeafoamB4Ch, 27,11)
GOTO 99 
LABEL 4 
ForcedChapterTransitionHole(SeafoamB5Ch, 27,18) // current sends you here 
LABEL 99 
NoFade 
ENDA 



DropBoulderInWestHoleEvent: 
BoulderHoleEvent(24,8, B3_BoulderAFlag)
NoFade 
ENDA 

DropBoulderInEastHoleEvent: 
BoulderHoleEvent(27,8, B3_BoulderBFlag)
NoFade 
ENDA 


// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(54, 12,ChapterID*2,1080)
//CoinsTrap(57,15,(ChapterID*2)+1,600)


//CutBush(12,10)
//RockSmash(29,9)

StrengthBoulder(24,7)
StrengthBoulder(28,8)


Hole(24,8) // boulders should come before holes, i think ? 
Hole(27,8) 

//StatAccessoryTrap(43, 13, (ChapterID*2), EnhancedWard_BoostIndex) 
RedPokeballTrap(15,8, (ChapterID*2)+1, Calcium) 
//RedPokeballTrap(34,7, (ChapterID*2), SuperPotion) 
//SkillAccessoryTrap(17,20, (ChapterID*2)+1, VantagePlusID) 

//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

//SignBTrap(14, 8, ChapterID, 0x0) //no extra text 
//SignATrap(55,7, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



//BerryTree(32,11,5)
//BerryTree(36,11,5)

//SkillScrollTrap(21,9, ChapterID*2, DartingStanceID)
//SpellScrollTrap(12, 28, (ChapterID*2)+1, HoneClaws)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(43,3) 
HealTile(18,12)


//Flower(18,10)


ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

CHECK_EVENTID B2_BoulderAFlag
BEQ 0 sC s0 // if off, never spawn 
CHECK_EVENTID B3_BoulderAFlag
BEQ 1 sC s0 // if on, never spawn 
LABEL 0 
RemoveTrap(24,7)
LABEL 1 


CHECK_EVENTID B2_BoulderBFlag
BEQ 2 sC s0 // if off, never spawn 
CHECK_EVENTID B3_BoulderBFlag
BEQ 3 sC s0 // if on, never spawn 
LABEL 2 
RemoveTrap(28,8)
LABEL 3


LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,5,5), Range(3,3,34,9)) 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,5,5), Range(4,10,34,19)) 


AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
 // Bushes  
//LOAD1 0x1 HumanTrainers
ENUN 
AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 




EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
//UNIT 0xF0 BurrowID 0x0 Level(0, Enemy, 1)   [34,2]  0b	0x0 0 0  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
//UNIT 0xF1 SuspiciousWaterID 0x0 Level(0, Enemy, 1)   [0,4]  0b	0x0 0x01 REDA0R4  [0x0,0x0,0x0,0x0] BushAI
UNIT 


ReinforcementUnitsA:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 
ReinforcementUnitsB:
UNIT Reinforcement0 ClassB 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 
	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID