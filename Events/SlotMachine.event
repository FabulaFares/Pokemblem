

SlotMachine_Main:
CHECK_MONEY 
SVAL s7 1000
BLT 50 sC s7 // If less than 1000g, exit 
EVBIT_MODIFY 4 
TutText(PlaySlotsText)
SVAL 0x7 0x1
BNE 0x63 0xC 0x7 // If not yes, then exit 

//UNCM(0x7FFF, 1) // Hide current unit 
// hide party 
CHECK_COORDS 0x7FFF
SADD rB rC r0 
CALL ConvertFromMemSlotBCoord
CHECK_CHAPTER_NUMBER
SADD r2 rC r0 
Write_Byte(CurrentChapter)

FADI 33
LOMA SlotMachineCh
ShowMap
LABEL 0 // Used when playing again 
SVAL s3 1000 
GIVETOSLOT3 // Take s3 (1000g) from the player 

CALL SlotMachine_Start 

// Play again? 
EVBIT_MODIFY 4 
TutText(PlaySlotsAgainText)
SVAL 0x7 0x1
BNE 20 0xC 0x7 // If not yes, then exit 
CHECK_MONEY 
SVAL s7 1000
BLT 10 sC s7 // If less than 1000g, exit 
GOTO 0 // Play again & has enough money 
LABEL 10
TutText(InsufficientFundsText)
GOTO 30 
LABEL 20
TutText(BetterSlowDownText)

LABEL 30
// clean up 
FADI 33
CLEE 0x0

// restore party from being hidden 

Read_Byte(CurrentChapter)
SADD r2 rC r0 
LOADMAP (-1) // fixed version of LOMA 
// just in case I copy Stan's EA folder again I guess 
//FADU 33 
CHECK_COORDS 0x7fff
SADD sB sC s0 
CALL CamSlotB
//ASMC 0x08019FA1   //UpdateUnitMapAndVision
//ASMC  0x0801A1A1   //UpdateTrapHiddenStates
//ASMC  0x080271a1   //@SMS_UpdateFromGameData
//ASMC  0x08019c3d   //@UpdateGameTilesGraphics
ASMC TrapRework_NewUpdateAllLightRunes

UNCR(0x7fff, 1) // unhide 
ShowMap
GOTO 0x63 
LABEL 50
TutText(InsufficientFundsText)

LABEL 0x63 




NoFade 
ENDA 

// maybe a sleeping Prof Oak? 

SlotMachine_Start:




COUNTER_SET 0x1 0x5
EVBIT_MODIFY 0x1
ENUT 0x84
SVAL 0xB 0x30005
DISA_IF 0xFFFE
SVAL 0xB 0x30007
DISA_IF 0xFFFE
SVAL 0xB 0x30009
DISA_IF 0xFFFE
SVAL 0xB 0x50005
DISA_IF 0xFFFE
SVAL 0xB 0x50007
DISA_IF 0xFFFE
SVAL 0xB 0x50009
DISA_IF 0xFFFE
SVAL 0xB 0x70005
DISA_IF 0xFFFE
SVAL 0xB 0x70007
DISA_IF 0xFFFE
SVAL 0xB 0x70009
DISA_IF 0xFFFE
GOTO 0x9000
LABEL 0x9000
SVAL 0x2 0xD0
RANDOMNUMBER 0xA
SADD 0xC23
RANDOMNUMBER 0xA
SADD 0xC24
RANDOMNUMBER 0xA
SADD 0xC25
RANDOMNUMBER 0xA
SADD 0xC26
RANDOMNUMBER 0xA
SADD 0xC27
RANDOMNUMBER 0xA
SADD 0xC28
RANDOMNUMBER 0xA
SADD 0xC29
RANDOMNUMBER 0xA
SADD 0xC2A
RANDOMNUMBER 0xA
SADD 0xC2B
GOTO 0x9015
LABEL 0x9010
CALL SlotMachine_1
SVAL 0x2 0xD0
RANDOMNUMBER 0xA
SADD 0xC23
RANDOMNUMBER 0xA
SADD 0xC27
RANDOMNUMBER 0xA
SADD 0xC2B
LABEL 0x9015
CALL SlotMachine_2
CALL SlotMachine_3
SVAL 0x2 0xD0
RANDOMNUMBER 0x8
SADD 0xC25
RANDOMNUMBER 0x8
SADD 0xC26
RANDOMNUMBER 0x8
SADD 0xC29
CALL SlotMachine_4
CALL SlotMachine_5
SVAL 0x2 0xD0
RANDOMNUMBER 0x7
SADD 0xC24
RANDOMNUMBER 0x7
SADD 0xC28
RANDOMNUMBER 0x7
SADD 0xC2A
COUNTER_SUBTRACT 0x1 0x1
CALL SlotMachine_6
COUNTER_CHECK 0x1
SVAL 0x7 0x0
BGT 0x9010 0xC 0x7
GOTO 0x9050

LABEL 0x9050
UNCR(0x7FFF, 0x42) // Refresh unit 
CALL SlotMachine_CheckRewards
ENUF 0x84
NoFade 
ENDA

SlotMachine_Common:
SADD 0x71
COUNTER_CHECK 0x1
SVAL 0x7 0x5
BGT 0x9050 0xC 0x7
STAL 1
COUNTER_CHECK 0x1
SVAL 0x7 0x4
BGT 0x9050 0xC 0x7
STAL 2
COUNTER_CHECK 0x1
SVAL 0x7 0x3
BGT 0x9050 0xC 0x7
RANDOMNUMBER 0x1
SVAL 0x7 0x0
BGT 0x9015 0xC 0x7
STAL 2
LABEL 0x9015
COUNTER_CHECK 0x1
SVAL 0x7 0x2
BGT 0x9050 0xC 0x7
STAL 3
RANDOMNUMBER 0x1
SVAL 0x7 0x0
BGT 0x9025 0xC 0x7
COUNTER_CHECK 0x1
SVAL 0x7 0x1
BGT 0x9050 0xC 0x7
STAL 4
LABEL 0x9025
LABEL 0x9050
SADD 0x17
EVBIT_T 0x7
ENDA



SlotMachine_1:
SADD 0x42
SPAWN_ENEMY 0xFFFD [5,4]
SADD 0x52
SPAWN_ENEMY 0xFFFD [5,6]
SADD 0x82
SPAWN_ENEMY 0xFFFD [7,4]
SADD 0x62
SPAWN_ENEMY 0xFFFD [7,6]
SADD 0xA2
SPAWN_ENEMY 0xFFFD [9,4]
SADD 0x92
SPAWN_ENEMY 0xFFFD [9,6]
ENUN
CALL SlotMachine_Common
SADD 0x42
DISA 0xFFFD
SADD 0x52
DISA 0xFFFD
SADD 0x62
DISA 0xFFFD
SADD 0x82
DISA 0xFFFD
SADD 0x92
DISA 0xFFFD
SADD 0xA2
DISA 0xFFFD
EVBIT_T 0x7
ENDA

SlotMachine_2:
SADD 0x32
SPAWN_ENEMY 0xFFFD [5,3]
SADD 0x42
SPAWN_ENEMY 0xFFFD [5,5]
SADD 0x52
SPAWN_ENEMY 0xFFFD [5,7]
SADD 0x72
SPAWN_ENEMY 0xFFFD [7,3]
SADD 0x82
SPAWN_ENEMY 0xFFFD [7,5]
SADD 0x62
SPAWN_ENEMY 0xFFFD [7,7]
SADD 0xB2
SPAWN_ENEMY 0xFFFD [9,3]
SADD 0xA2
SPAWN_ENEMY 0xFFFD [9,5]
SADD 0x92
SPAWN_ENEMY 0xFFFD [9,7]
CALL SlotMachine_Common
ENUN
SADD 0x32
DISA 0xFFFD
SADD 0x42
DISA 0xFFFD
SADD 0x52
DISA 0xFFFD
SADD 0x62
DISA 0xFFFD
SADD 0x82
DISA 0xFFFD
SADD 0x72
DISA 0xFFFD
SADD 0x92
DISA 0xFFFD
SADD 0xA2
DISA 0xFFFD
SADD 0xB2
DISA 0xFFFD
EVBIT_T 0x7
ENDA









SlotMachine_3:
SADD 0x32
SPAWN_ENEMY 0xFFFD [5,4]
SADD 0x42
SPAWN_ENEMY 0xFFFD [5,6]
SADD 0x72
SPAWN_ENEMY 0xFFFD [7,4]
SADD 0x82
SPAWN_ENEMY 0xFFFD [7,6]
SADD 0xB2
SPAWN_ENEMY 0xFFFD [9,4]
SADD 0xA2
SPAWN_ENEMY 0xFFFD [9,6]
ENUN
CALL SlotMachine_Common
SADD 0x32
DISA 0xFFFD
SADD 0x42
DISA 0xFFFD
SADD 0x72
DISA 0xFFFD
SADD 0x82
DISA 0xFFFD
SADD 0xB2
DISA 0xFFFD
SADD 0xA2
DISA 0xFFFD
EVBIT_T 0x7
ENDA









SlotMachine_4:
SADD 0x32
SPAWN_ENEMY 0xFFFD [5,5]
SADD 0x42
SPAWN_ENEMY 0xFFFD [5,7]
SADD 0x52
SPAWN_ENEMY 0xFFFD [5,3]
SADD 0x72
SPAWN_ENEMY 0xFFFD [7,5]
SADD 0x82
SPAWN_ENEMY 0xFFFD [7,7]
SADD 0x62
SPAWN_ENEMY 0xFFFD [7,3]
SADD 0xB2
SPAWN_ENEMY 0xFFFD [9,5]
SADD 0xA2
SPAWN_ENEMY 0xFFFD [9,7]
SADD 0x92
SPAWN_ENEMY 0xFFFD [9,3]
ENUN
CALL SlotMachine_Common
SADD 0x32
DISA 0xFFFD
SADD 0x42
DISA 0xFFFD
SADD 0x52
DISA 0xFFFD
SADD 0x62
DISA 0xFFFD
SADD 0x82
DISA 0xFFFD
SADD 0x72
DISA 0xFFFD
SADD 0x92
DISA 0xFFFD
SADD 0xA2
DISA 0xFFFD
SADD 0xB2
DISA 0xFFFD
EVBIT_T 0x7
ENDA




SlotMachine_5:
SADD 0x32
SPAWN_ENEMY 0xFFFD [5,6]
SADD 0x52
SPAWN_ENEMY 0xFFFD [5,4]
SADD 0x72
SPAWN_ENEMY 0xFFFD [7,6]
SADD 0x62
SPAWN_ENEMY 0xFFFD [7,4]
SADD 0xB2
SPAWN_ENEMY 0xFFFD [9,6]
SADD 0x92
SPAWN_ENEMY 0xFFFD [9,4]
ENUN
CALL SlotMachine_Common
SADD 0x32
DISA 0xFFFD
SADD 0x52
DISA 0xFFFD
SADD 0x62
DISA 0xFFFD
SADD 0x72
DISA 0xFFFD
SADD 0x92
DISA 0xFFFD
SADD 0xB2
DISA 0xFFFD
EVBIT_T 0x7
ENDA




SlotMachine_6:
SADD 0x32
SPAWN_ENEMY 0xFFFD [5,7]
SADD 0x42
SPAWN_ENEMY 0xFFFD [5,3]
SADD 0x52
SPAWN_ENEMY 0xFFFD [5,5]
SADD 0x72
SPAWN_ENEMY 0xFFFD [7,7]
SADD 0x82
SPAWN_ENEMY 0xFFFD [7,3]
SADD 0x62
SPAWN_ENEMY 0xFFFD [7,5]
SADD 0xB2
SPAWN_ENEMY 0xFFFD [9,7]
SADD 0xA2
SPAWN_ENEMY 0xFFFD [9,3]
SADD 0x92
SPAWN_ENEMY 0xFFFD [9,5]
ENUN
CALL SlotMachine_Common
COUNTER_CHECK 0x1
SVAL 0x7 0x1
BLT 0x9050 0xC 0x7
SVAL 0xB 0x70005
DISA_IF 0xFFFE
SVAL 0xB 0x50005
DISA_IF 0xFFFE
SVAL 0xB 0x30005
DISA_IF 0xFFFE
SVAL 0xB 0x70007
DISA_IF 0xFFFE
SVAL 0xB 0x50007
DISA_IF 0xFFFE
SVAL 0xB 0x30007
DISA_IF 0xFFFE
SVAL 0xB 0x30009
DISA_IF 0xFFFE
SVAL 0xB 0x50009
DISA_IF 0xFFFE
SVAL 0xB 0x70009
DISA_IF 0xFFFE
LABEL 0x9050
EVBIT_T 0x7
ENDA

#define CompareSlots(Input_A, Input_B, Input_C) "SADD sB Input_A s0; SADD s3 Input_C s0; SADD sC Input_B s0; SXOR sB sB sC; SADD sC Input_B s0; CALL CompareSlotsEvent;  SADD sB Input_A s0" 

CompareSlotsEvent:
SXOR s3 s3 sC;SVAL sC 1; SADD sB sB sC; SADD s3 s3 sC; SSUB sB s0 sB; SSUB s3 s0 s3; SAND s3 s3 sB; SVAL sC 1; SADD s3 s3 sC; SSUB sC s0 s3;
NoFade 
ENDA 





// returns 0 if true because blah 
// returns non-zero if false 

// ; SVAL s3 1; SADD sC sC s3" 


// check class x y z 
// x * y / z = z 
// 
//#define Input_A 50 
//#define Input_B 45
//#define Input_C 50 
//
//
//SVAL sB Input_A
//SVAL s3 Input_C
//SVAL sC Input_B
//SXOR sB sB sC 
//SVAL sC Input_B
//SXOR s3 s3 sC
////Text(DebugText)
//SVAL sC 1 
//SADD sB sB sC 
//SADD s3 s3 sC // NOT is -(x+1)
//SSUB sB s0 sB // 0 - (x+1) 
//SSUB s3 s0 s3 // 0 - (x+1) 
////Text(DebugText)
//SAND s3 s3 sB 
//
//SVAL sC 1 
//SADD s3 s3 sC // +1 
//SSUB s3 s0 s3 // NOT(((not(a xor b) AND (NOT(b xor c)))
////Text(DebugText)



SlotMachine_CheckRewards:
STAL 30
SVAL 0xB 0x30005
CHECK_CLASS 0xFFFE
SADD 0xC2
SVAL 0xB 0x30007
CHECK_CLASS 0xFFFE
SADD 0xC4
SVAL 0xB 0x30009
CHECK_CLASS 0xFFFE
SADD 0xC5
SVAL 0xB 0x50005
CHECK_CLASS 0xFFFE
SADD 0xC6
SVAL 0xB 0x50007
CHECK_CLASS 0xFFFE
SADD 0xC8
SVAL 0xB 0x50009
CHECK_CLASS 0xFFFE
SADD 0xC9
SVAL 0xB 0x70005
CHECK_CLASS 0xFFFE
SADD 0xCA
SVAL 0xB 0x70007
CHECK_CLASS 0xFFFE
SADD 0xC1
SVAL 0xB 0x70009
CHECK_CLASS 0xFFFE
SADD 0xC7

// s2 s4 s5 
// s6 s8 s9 
// sA s1 s7 
// scratch: sB, sC, s3 
COUNTER_SET 1 0 
CompareSlots(s2, s4, s5) 
BNE 0x9000 sC s0 
CALL SlotMachine_Awards
LABEL 0x9000
CompareSlots(s2, s6, sA) 
BNE 0x9001 sC s0 
CALL SlotMachine_Awards
LABEL 0x9001
CompareSlots(s2, s8, s7) 
BNE 0x9002 sC s0 
CALL SlotMachine_Awards
LABEL 0x9002
CompareSlots(s4, s8, s1) 
BNE 0x9003 sC s0 
CALL SlotMachine_Awards
LABEL 0x9003
CompareSlots(s6, s8, s9) 
BNE 0x9004 sC s0 
CALL SlotMachine_Awards
LABEL 0x9004
CompareSlots(sA, s1, s7) 
BNE 0x9005 sC s0 
CALL SlotMachine_Awards
LABEL 0x9005
CompareSlots(sA, s8, s5) 
BNE 0x9006 sC s0 
CALL SlotMachine_Awards
LABEL 0x9006
CompareSlots(s7, s9, s5) 
BNE 0x9007 sC s0 
CALL SlotMachine_Awards
GOTO 0x9045
LABEL 0x9007
COUNTER_CHECK 1 
BNE 0x9045 sC s0 
STAL 40 // only stal if no reward 
LABEL 0x9045 
STAL 20 
NoFade 
ENDA


// Eevee: ThunderStone, FireStone, WaterStone 
// // Clefairy: MoonStone 
// Oddish: LeafStone 
// Gastly: LinkStone 
// Mew: SacredStone


GastlyRewardEvent:
// write to queue X times 
SVAL s3 LinkStone // 25%
SENQUEUE s3 
SVAL s3 Protein // 33%  - real chance about 25% 
SENQUEUE s3 
SVAL s3 Carbos // 50% - real chance about 25% 
SENQUEUE s3 
SVAL s3 Calcium // guaranteed 
SENQUEUE s3 
CALL RandomRewardEvent
LABEL 99 
NoFade 
ENDA 

ClefairyRewardEvent:
// write to queue X times 
SVAL s3 MoonStone // 25%
SENQUEUE s3 
SVAL s3 Iron // 33%  - real chance about 25% 
SENQUEUE s3 
SVAL s3 HPUp // 50% - real chance about 25% 
SENQUEUE s3 
SVAL s3 Zinc // guaranteed 
SENQUEUE s3 
CALL RandomRewardEvent
LABEL 99 
NoFade 
ENDA 

EeveeRewardEvent:
// write to queue X times 
SVAL s3 MaxPotion // 25%
SENQUEUE s3 
SVAL s3 FireStone // 33%  - real chance about 25% 
SENQUEUE s3 
SVAL s3 WaterStone // 50% - real chance about 25% 
SENQUEUE s3 
SVAL s3 ThunderStone // guaranteed 
SENQUEUE s3 
CALL RandomRewardEvent
LABEL 99 
NoFade 
ENDA 

MewRewardEvent:
// write to queue X times 
SVAL s3 SacredStone
SENQUEUE s3 
SVAL s3 ExoticCandy
SENQUEUE s3 
SVAL s3 Protein
SENQUEUE s3 
SVAL s3 Iron
SENQUEUE s3 
SVAL s3 ExoticCandy
SENQUEUE s3 
SVAL s3 Calcium
SENQUEUE s3 
SVAL s3 Zinc
SENQUEUE s3 
SVAL s3 Carbos
SENQUEUE s3 
SVAL s3 HPUp
SENQUEUE s3 
SVAL s3 ExoticCandy
SENQUEUE s3 
CALL RandomRewardEvent
LABEL 99 
NoFade 
ENDA 
 
OddishRewardEvent:
// write to queue X times 
SVAL s3 LeafStone
SENQUEUE s3 
SVAL s3 SuperPotion
SENQUEUE s3 
SVAL s3 Berry
SENQUEUE s3 
CALL RandomRewardEvent
LABEL 99 
NoFade 
ENDA 


RandomRewardEvent: // loop through entries in queue until desired outcome reached 
BEQ 99 sD s0 // If queue is empty, exit 
LABEL 1

SVAL sC 1 
BLT 98 sD sC // Always give item on final value in queue 
SDEQUEUE sB 
SADD s3 sD s0 // queue size into s3 for getrand 
SVAL sC 16 
SLSL s3 s3 sC // LSL #16 so hhhhllll
GetRand // rets True if highest value, false otherwise 
BEQ 1 sC s0 
LABEL 98 
SADD s3 sB s0 
GIVEITEMTO 0x7FFF
COUNTER_ADD 1 1

LABEL 2 // Empty the queue if it has any data still in it 
BEQ 99 sD s0 // If queue is empty, exit 
SDEQUEUE s3 
GOTO 2 

LABEL 99 
NoFade 
ENDA 


SlotMachine_Awards:
SVAL 0xC OddishID
BNE 0x9000 0xB 0xC
	CALL 0x591F40
CALL OddishRewardEvent
LABEL 0x9000
SVAL 0xC BushID
BNE 0x9001 0xB 0xC
	CALL 0x591F40
CALL OddishRewardEvent

LABEL 0x9001
SVAL 0xC ClefairyID
BNE 0x9002 0xB 0xC
	CALL 0x591F40
CALL ClefairyRewardEvent
LABEL 0x9002
SVAL 0xC BushID
BNE 0x9003 0xB 0xC
	CALL 0x591F40
CALL OddishRewardEvent
LABEL 0x9003
SVAL 0xC EeveeID
BNE 0x9004 0xB 0xC
	CALL 0x591F40
CALL EeveeRewardEvent
LABEL 0x9004
SVAL 0xC BushID
BNE 0x9005 0xB 0xC
	CALL 0x591F40
CALL OddishRewardEvent
LABEL 0x9005
SVAL 0xC GastlyID
BNE 0x9006 0xB 0xC
	CALL 0x591F40
CALL GastlyRewardEvent
LABEL 0x9006
SVAL 0xC CoinsID
BNE 0x9007 0xB 0xC
	CALL 0x591F40
CALL OddishRewardEvent
LABEL 0x9007
SVAL 0xC BushID
BNE 0x9008 0xB 0xC
	CALL 0x591F40
CALL OddishRewardEvent
LABEL 0x9008
SVAL 0xC BushID
BNE 0x9009 0xB 0xC
	CALL 0x591F40
CALL OddishRewardEvent
LABEL 0x9009
SVAL 0xC MewID
BNE 0x900A 0xB 0xC
	CALL 0x591F40
CALL MewRewardEvent
LABEL 0x900A
LABEL 0x9050
EVBIT_T 0x7
ENDA


