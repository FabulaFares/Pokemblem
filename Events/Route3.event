#define ChapterID Route3Ch
#define GenericA UnitRoute3Wild
#define GenericB UnitRoute3Trainer
#define ClassA ClassRoute3WildA
#define ClassB ClassRoute3WildB
#define WildLvl 9
#define TrainerL 13





EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
TurnEventPlayer(DisableTutFlag_A, TutMsg1, 0, 255) // 
END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, GrassReinforcementUnits, 7, 4) // Mid Grass 
Reinforce(0xF1, 1, GrassReinforcementUnits, 10, 4) // East Grass 
Reinforce(0xF2, 1, BurrowReinforcementUnits, 3, 4) // West burrow 
Reinforce(0xF3, 1, BurrowReinforcementUnits, 5, 4) // Mid-W Burrow 
Reinforce(0xF4, 1, BurrowReinforcementUnits, 8, 4) // Mid-E Burrow 
Reinforce(0xF5, 1, BurrowReinforcementUnits, 9, 4) // East burrow 
}

CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
//TrainerPostBattleTalk(0xE0)
END_MAIN



LocationBasedEvents:

END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToPewterCity [0,9] [0,12] 
AREA 0 ToRoute4W [49,0] [55,0] 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(50,0) 
EscapeTileEntry(52,0) 
EscapeTileEntry(54,0) 
EscapeTileEntry(0,10) 
EscapeTileEntry(0,11) 
EscapeTileTerminator ; } 
#endif 

ToPewterCity:
ChapterTransition(PewterCh, 39, 20)

ToRoute4W:
ChapterTransition(Route4WCh, 12, 19)


TutMsg1: 
CHECK_EVENTID DisableTutMsgsFlag
BNE 99 sC s0 
ENUF DisableTutFlag_A
SVAL s1 ((ChapterID*2)+(HelpMsgFlagOffset<<3)) 
ASMC CheckNewFlag_ASMC 
BNE 99 sC s0 
CountPlayersInRange_ASMC(21, 6, 33,16) 
BEQ 99 sC s0 
ENUT DisableTutFlag_A
EVBIT_MODIFY 4
PauseFreeMovement
STAL 5
CAM1 [32,11]
CUMO [32,11]
STAL 30
CURE  
TutText(TrainerTip_PartySize)
SVAL s1 ((ChapterID*2)+(HelpMsgFlagOffset<<3)) 
ASMC SetNewFlag_ASMC 
LABEL 99 
NoFade 
ENDA 


// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
CoinsTrap(13,15,ChapterID*2,550)
CoinsTrap(57,15,(ChapterID*2)+1,600)

TutSign(32,11, ChapterID*2,TrainerTip_PartySize)

//CutBush(4,2)
//RockSmash(3,2)
//StrengthBoulder(4,3)

//RedPokeballTrap(18,9, ChapterID*2, SuperPotion)
//RedPokeballTrap(18,25, ChapterID*2, Vulnerary)
//GoldPokeballTrap(14,13, (ChapterID*2)+1, Gust) 

SignBTrap(54,11, ChapterID, 0x0) //no extra text 
SignATrap(4,8, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 

SkillScrollTrap(42,16, ChapterID*2, ParagonID)
SpellScrollTrap(18,9, (ChapterID*2)+1, DoubleHit)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(43,3) 
HealTile(24,10)

Flower(39,14)
Flower(41,14)
Flower(41,16)
Flower(42,15)
Flower(43,16)
Flower(45,16)


BerryTree(23,23,5)
BerryTree(49,10,5)



ENDTRAP
ALIGN 4


BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 
LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(22,11,33,16)) //w patch 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(47,10,57,16)) //se patch 
LOAD1 0x1 EnemyUnitsC // burrows 
ENUN
AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
 // Bushes   
LOAD1 0x1 HumanTrainers
ENUN 
AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent
LABEL 0x63

NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

// Wilds
EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF0 BushID 0x0 Level(0, Enemy, 1)   [4,4] 0b	0x0 0x01 REDA4R4 [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,3] 001b	0x0 0x01 REDA0R3 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF1 BushID 0x0 Level(0, Enemy, 1)   [4,4] 0b	0x0 0x01 REDA4R4 [0x0,0x0,0x0,0x0] BushAI
UNIT

EnemyUnitsC:
UNIT 0xF2 BurrowID 0x0 Level(0, Enemy, 1)   [5,7]  0b	0x0 0x01 REDA5R7  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF3 BurrowID 0x0 Level(0, Enemy, 1)   [17,2] 0b	0x0 0x01 REDA17R2 [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF4 BurrowID 0x0 Level(0, Enemy, 1)   [28,8] 0b	0x0 0x01 REDA28R8 [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF5 BurrowID 0x0 Level(0, Enemy, 1)   [38,4] 0b	0x0 0x01 REDA38R4 [0x0,0x0,0x0,0x0] BushAI
UNIT 

BurrowReinforcementUnits:
UNIT Reinforcement0 RattataID 0x0 Level(0, Enemy, 1)   [0,0] 0b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 


GrassReinforcementUnits:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers0) 
MS_TableEntry(0xE1, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers1) 
MS_TableEntry(0xE2, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers2) 
MS_TableEntry(0xE3, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers3) 
MS_TableEntry(0xE4, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers4) 
MS_TableEntry(0xE5, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers5) 
MS_TableEntry(0xE6, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers6) 



MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
SHORT R3_0xE0_BQ // 0xE0 
SHORT R3_0xE1_BQ // 0xE1
SHORT R3_0xE2_BQ // 0xE2 
SHORT R3_0xE3_BQ // 0xE3 
SHORT R3_0xE4_BQ // 0xE4 
SHORT R3_0xE5_BQ // 0xE5
SHORT R3_0xE6_BQ // 0xE6 
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
SHORT R3_0xE0_BD // 0xE0 
SHORT 300 // Gold 
SHORT R3_0xE1_BD // 0xE1
SHORT 550 // Gold 
SHORT R3_0xE2_BD // 0xE2 
SHORT 200 // Gold 
SHORT R3_0xE3_BD // 0xE3 
SHORT 600 // Gold 
SHORT R3_0xE4_BD // 0xE4 
SHORT 375 // Gold 
SHORT R3_0xE5_BD // 0xE4 
SHORT 500 // Gold 
SHORT R3_0xE6_BD // 0xE4 
SHORT 650 // Gold 
TDQ_TableTerminator ; }

// all trainers with the same sprite will face the same direction! 
HumanTrainers:
UNIT 0xE0 bug_catcherID 0x0 Level(0, Enemy, 1) [22,3]  0b 0x0	0x0 0x0 [FiveRangeWep,0x0,0x0,0x0] TrainerBossAI
UNIT 0xE1 lassID 0x0 Level(LVFACELEFT, Enemy, 1) [11,09]  0b 0x0	0x0 0x0 [FiveRangeWep,0x0,0x0,0x0] TrainerBossAI
UNIT 0xE2 bug_catcherID 0x0 Level(0, Enemy, 1) [45,11]  0b 0x0	0x0 0x0 [OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE3 lassID 0x0 Level(LVFACELEFT, Enemy, 1) [34,10]  0b 0x0	0x0 0x0 [ThreeRangeWep,0x0,0x0,0x0] TrainerBossAI //
//UNIT 0xE4 camperID 0x0 Level(0, Enemy, 1) [35,05]  0b 0x0	0x0 0x0 [FiveRangeWep,0x0,0x0,0x0] TrainerBossAI // TrainerBossAI
//UNIT 0xE5 lassID 0x0 Level(0, Enemy, 1) [45,11]  0b 0x0	0x0 0x0 [OneRangeWep,0x0,0x0,0x0] TrainerAI // TrainerBossAI
UNIT 0xE6 camperID 0x0 Level(LVFACERIGHT, Enemy, 1) [49,6]  0b 0x0	0x0 0x0 [OneRangeWep,0x0,0x0,0x0] TrainerAI // TrainerBossAI
UNIT


// 9 / 16 - players + 4 unique objects + 3 unique trainers (BugCatcher, Lass, Camper) + weedle+caterpie 
// 7 / 16 - wild + trainer unique classes 
// Weedle, caterpie (not included in 7 count) 
// Sandshrew, Oddish, - wild mons 
// Rattata - reinforcement from burrows 
// jigglypuff trainer 
// vulpix, poliwag, oddish 
// 6 player, 7.5 trainers, 8 incl weedle/caterpie, 
// 14 total ? 
// sign, berry, flowers, gold pokeball, bush, burrow, coins 

// Leader unit IDs are only for saving which trainers have been beaten or not 
// they range from 0xD0 - 0xDF 
// handled in Patches\TrainerDeathFlags
EnemyTrainers0: // Bug Catcher 
UNIT GenericB 	WeedleID 0xE0 	Level(0, Enemy, 1) [10,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	CaterpieID 0xE0 	Level(0, Enemy, 1) [11,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	RattataID 0xE0 	Level(0, Enemy, 1) [12,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT

EnemyTrainers1: // Lass 
UNIT GenericB 	PoliwagID 0xE1 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	OddishID 0xE1 	Level(0, Enemy, 1) [11,10]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0]  SafestZoningGroupTwoAI
//UNIT GenericB 	CaterpieID 0xE1 	Level(0, Enemy, 1) [10,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0]  SafestZoningGroupTwoAI
UNIT

EnemyTrainers2: // Bug Catcher 
UNIT GenericB  CaterpieID 0xE2 	Level(0, Enemy, 1) [ 8,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB  WeedleID 0xE2 	Level(0, Enemy, 1) [ 9,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
//UNIT GenericB  CaterpieID 0xE2 	Level(0, Enemy, 1) [ 10,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB 	WeedleID 0xE2 	Level(0, Enemy, 1) [11,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB 	CaterpieID 0xE2 	Level(0, Enemy, 1) [12,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT

EnemyTrainers3: // Lass 
UNIT GenericB  JigglypuffID 0xE3 	Level(0, Enemy, 1) [ 8,12]  0b 0x0	0x0 0x00 [Headbutt, Tackle,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB  VulpixID 0xE3 	Level(0, Enemy, 1) [10,12]  0b 0x0	0x0 0x00 [Headbutt, Tackle,0x0,0x0] SafestZoningGroupFourAI
UNIT

EnemyTrainers4: // Camper 
UNIT GenericB  SandshrewID 0xE4 		Level(0, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericB  SandshrewID 0xE4 		Level(0, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT

EnemyTrainers5: // Lass
UNIT GenericB  OddishID 0xE5 		Level(0, Enemy, 1) [8,8]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT GenericB 	PoliwagID 0xE5 	Level(0, Enemy, 1) [10,8]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT GenericB 	VulpixID 0xE5 	Level(0, Enemy, 1) [12,8]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT


EnemyTrainers6: // Camper 
UNIT GenericB 	RattataID 0xE6	Level(0, Enemy, 1) [12,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT GenericB  RattataID 0xE6		Level(0, Enemy, 1) [10,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT GenericB 	SandshrewID 0xE6 	Level(0, Enemy, 1) [8,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT


	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID